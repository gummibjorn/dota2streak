/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse20014;
import io.swagger.client.model.InlineResponse20021;
import io.swagger.client.model.InlineResponse20023;
import io.swagger.client.model.InlineResponse20024;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HeroesApi
 */
@Ignore
public class HeroesApiTest {

    private final HeroesApi api = new HeroesApi();

    
    /**
     * GET /heroes
     *
     * Get hero data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void heroesGetTest() throws ApiException {
        List<InlineResponse20021> response = api.heroesGet();

        // TODO: test validations
    }
    
    /**
     * GET /heroes/{hero_id}/durations
     *
     * Get hero performance over a range of match durations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void heroesHeroIdDurationsGetTest() throws ApiException {
        Integer heroId = null;
        List<InlineResponse20024> response = api.heroesHeroIdDurationsGet(heroId);

        // TODO: test validations
    }
    
    /**
     * GET /heroes/{hero_id}/matches
     *
     * Get recent matches with a hero
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void heroesHeroIdMatchesGetTest() throws ApiException {
        Integer heroId = null;
        List<InlineResponse20014> response = api.heroesHeroIdMatchesGet(heroId);

        // TODO: test validations
    }
    
    /**
     * GET /heroes/{hero_id}/matchups
     *
     * Get results against other heroes for a hero
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void heroesHeroIdMatchupsGetTest() throws ApiException {
        Integer heroId = null;
        List<InlineResponse20023> response = api.heroesHeroIdMatchupsGet(heroId);

        // TODO: test validations
    }
    
    /**
     * GET /heroes/{hero_id}/players
     *
     * Get players who have played this hero
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void heroesHeroIdPlayersGetTest() throws ApiException {
        Integer heroId = null;
        List<List<Object>> response = api.heroesHeroIdPlayersGet(heroId);

        // TODO: test validations
    }
    
}
