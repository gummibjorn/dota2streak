/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20017RanksRows
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse20017RanksRows {
  @SerializedName("bin")
  private Integer bin = null;

  @SerializedName("bin_name")
  private Integer binName = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("cumulative_sum")
  private Integer cumulativeSum = null;

  public InlineResponse20017RanksRows bin(Integer bin) {
    this.bin = bin;
    return this;
  }

   /**
   * bin
   * @return bin
  **/
  @ApiModelProperty(value = "bin")
  public Integer getBin() {
    return bin;
  }

  public void setBin(Integer bin) {
    this.bin = bin;
  }

  public InlineResponse20017RanksRows binName(Integer binName) {
    this.binName = binName;
    return this;
  }

   /**
   * bin_name
   * @return binName
  **/
  @ApiModelProperty(value = "bin_name")
  public Integer getBinName() {
    return binName;
  }

  public void setBinName(Integer binName) {
    this.binName = binName;
  }

  public InlineResponse20017RanksRows count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * count
   * @return count
  **/
  @ApiModelProperty(value = "count")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public InlineResponse20017RanksRows cumulativeSum(Integer cumulativeSum) {
    this.cumulativeSum = cumulativeSum;
    return this;
  }

   /**
   * cumulative_sum
   * @return cumulativeSum
  **/
  @ApiModelProperty(value = "cumulative_sum")
  public Integer getCumulativeSum() {
    return cumulativeSum;
  }

  public void setCumulativeSum(Integer cumulativeSum) {
    this.cumulativeSum = cumulativeSum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20017RanksRows inlineResponse20017RanksRows = (InlineResponse20017RanksRows) o;
    return Objects.equals(this.bin, inlineResponse20017RanksRows.bin) &&
        Objects.equals(this.binName, inlineResponse20017RanksRows.binName) &&
        Objects.equals(this.count, inlineResponse20017RanksRows.count) &&
        Objects.equals(this.cumulativeSum, inlineResponse20017RanksRows.cumulativeSum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bin, binName, count, cumulativeSum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20017RanksRows {\n");
    
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    binName: ").append(toIndentedString(binName)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    cumulativeSum: ").append(toIndentedString(cumulativeSum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

