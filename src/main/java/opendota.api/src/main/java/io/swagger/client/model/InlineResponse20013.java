/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20013
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse20013 {
  @SerializedName("account_id")
  private Integer accountId = null;

  @SerializedName("steamid")
  private String steamid = null;

  @SerializedName("avatar")
  private String avatar = null;

  @SerializedName("avatarmedium")
  private String avatarmedium = null;

  @SerializedName("avatarfull")
  private String avatarfull = null;

  @SerializedName("profileurl")
  private String profileurl = null;

  @SerializedName("personaname")
  private String personaname = null;

  @SerializedName("cheese")
  private Integer cheese = null;

  @SerializedName("fh_unavailable")
  private Boolean fhUnavailable = null;

  @SerializedName("loccountrycode")
  private String loccountrycode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("country_code")
  private String countryCode = null;

  @SerializedName("fantasy_role")
  private Integer fantasyRole = null;

  @SerializedName("team_id")
  private Integer teamId = null;

  @SerializedName("team_name")
  private String teamName = null;

  @SerializedName("team_tag")
  private String teamTag = null;

  @SerializedName("is_locked")
  private Boolean isLocked = null;

  @SerializedName("is_pro")
  private Boolean isPro = null;

  @SerializedName("locked_until")
  private Integer lockedUntil = null;

  public InlineResponse20013 accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Player&#39;s account identifier
   * @return accountId
  **/
  @ApiModelProperty(value = "Player's account identifier")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public InlineResponse20013 steamid(String steamid) {
    this.steamid = steamid;
    return this;
  }

   /**
   * Player&#39;s steam identifier
   * @return steamid
  **/
  @ApiModelProperty(value = "Player's steam identifier")
  public String getSteamid() {
    return steamid;
  }

  public void setSteamid(String steamid) {
    this.steamid = steamid;
  }

  public InlineResponse20013 avatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Steam picture URL (small picture)
   * @return avatar
  **/
  @ApiModelProperty(value = "Steam picture URL (small picture)")
  public String getAvatar() {
    return avatar;
  }

  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  public InlineResponse20013 avatarmedium(String avatarmedium) {
    this.avatarmedium = avatarmedium;
    return this;
  }

   /**
   * Steam picture URL (medium picture)
   * @return avatarmedium
  **/
  @ApiModelProperty(value = "Steam picture URL (medium picture)")
  public String getAvatarmedium() {
    return avatarmedium;
  }

  public void setAvatarmedium(String avatarmedium) {
    this.avatarmedium = avatarmedium;
  }

  public InlineResponse20013 avatarfull(String avatarfull) {
    this.avatarfull = avatarfull;
    return this;
  }

   /**
   * Steam picture URL (full picture)
   * @return avatarfull
  **/
  @ApiModelProperty(value = "Steam picture URL (full picture)")
  public String getAvatarfull() {
    return avatarfull;
  }

  public void setAvatarfull(String avatarfull) {
    this.avatarfull = avatarfull;
  }

  public InlineResponse20013 profileurl(String profileurl) {
    this.profileurl = profileurl;
    return this;
  }

   /**
   * Steam profile URL
   * @return profileurl
  **/
  @ApiModelProperty(value = "Steam profile URL")
  public String getProfileurl() {
    return profileurl;
  }

  public void setProfileurl(String profileurl) {
    this.profileurl = profileurl;
  }

  public InlineResponse20013 personaname(String personaname) {
    this.personaname = personaname;
    return this;
  }

   /**
   * Player&#39;s Steam name
   * @return personaname
  **/
  @ApiModelProperty(value = "Player's Steam name")
  public String getPersonaname() {
    return personaname;
  }

  public void setPersonaname(String personaname) {
    this.personaname = personaname;
  }

  public InlineResponse20013 cheese(Integer cheese) {
    this.cheese = cheese;
    return this;
  }

   /**
   * Amount of dollars the player has donated to OpenDota
   * @return cheese
  **/
  @ApiModelProperty(value = "Amount of dollars the player has donated to OpenDota")
  public Integer getCheese() {
    return cheese;
  }

  public void setCheese(Integer cheese) {
    this.cheese = cheese;
  }

  public InlineResponse20013 fhUnavailable(Boolean fhUnavailable) {
    this.fhUnavailable = fhUnavailable;
    return this;
  }

   /**
   * Whether the refresh of player&#39; match history failed
   * @return fhUnavailable
  **/
  @ApiModelProperty(value = "Whether the refresh of player' match history failed")
  public Boolean isFhUnavailable() {
    return fhUnavailable;
  }

  public void setFhUnavailable(Boolean fhUnavailable) {
    this.fhUnavailable = fhUnavailable;
  }

  public InlineResponse20013 loccountrycode(String loccountrycode) {
    this.loccountrycode = loccountrycode;
    return this;
  }

   /**
   * Player&#39;s country identifier, e.g. US
   * @return loccountrycode
  **/
  @ApiModelProperty(value = "Player's country identifier, e.g. US")
  public String getLoccountrycode() {
    return loccountrycode;
  }

  public void setLoccountrycode(String loccountrycode) {
    this.loccountrycode = loccountrycode;
  }

  public InlineResponse20013 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Verified player name, e.g. &#39;Miracle-&#39;
   * @return name
  **/
  @ApiModelProperty(value = "Verified player name, e.g. 'Miracle-'")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20013 countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Player&#39;s country code
   * @return countryCode
  **/
  @ApiModelProperty(value = "Player's country code")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public InlineResponse20013 fantasyRole(Integer fantasyRole) {
    this.fantasyRole = fantasyRole;
    return this;
  }

   /**
   * Player&#39;s ingame role (core: 1 or support: 2)
   * @return fantasyRole
  **/
  @ApiModelProperty(value = "Player's ingame role (core: 1 or support: 2)")
  public Integer getFantasyRole() {
    return fantasyRole;
  }

  public void setFantasyRole(Integer fantasyRole) {
    this.fantasyRole = fantasyRole;
  }

  public InlineResponse20013 teamId(Integer teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Player&#39;s team identifier
   * @return teamId
  **/
  @ApiModelProperty(value = "Player's team identifier")
  public Integer getTeamId() {
    return teamId;
  }

  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }

  public InlineResponse20013 teamName(String teamName) {
    this.teamName = teamName;
    return this;
  }

   /**
   * Player&#39;s team name, e.g. &#39;Evil Geniuses&#39;
   * @return teamName
  **/
  @ApiModelProperty(value = "Player's team name, e.g. 'Evil Geniuses'")
  public String getTeamName() {
    return teamName;
  }

  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }

  public InlineResponse20013 teamTag(String teamTag) {
    this.teamTag = teamTag;
    return this;
  }

   /**
   * Player&#39;s team shorthand tag, e.g. &#39;EG&#39;
   * @return teamTag
  **/
  @ApiModelProperty(value = "Player's team shorthand tag, e.g. 'EG'")
  public String getTeamTag() {
    return teamTag;
  }

  public void setTeamTag(String teamTag) {
    this.teamTag = teamTag;
  }

  public InlineResponse20013 isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * Whether the roster lock is active
   * @return isLocked
  **/
  @ApiModelProperty(value = "Whether the roster lock is active")
  public Boolean isIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public InlineResponse20013 isPro(Boolean isPro) {
    this.isPro = isPro;
    return this;
  }

   /**
   * Whether the player is professional or not
   * @return isPro
  **/
  @ApiModelProperty(value = "Whether the player is professional or not")
  public Boolean isIsPro() {
    return isPro;
  }

  public void setIsPro(Boolean isPro) {
    this.isPro = isPro;
  }

  public InlineResponse20013 lockedUntil(Integer lockedUntil) {
    this.lockedUntil = lockedUntil;
    return this;
  }

   /**
   * When the roster lock will end
   * @return lockedUntil
  **/
  @ApiModelProperty(value = "When the roster lock will end")
  public Integer getLockedUntil() {
    return lockedUntil;
  }

  public void setLockedUntil(Integer lockedUntil) {
    this.lockedUntil = lockedUntil;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20013 inlineResponse20013 = (InlineResponse20013) o;
    return Objects.equals(this.accountId, inlineResponse20013.accountId) &&
        Objects.equals(this.steamid, inlineResponse20013.steamid) &&
        Objects.equals(this.avatar, inlineResponse20013.avatar) &&
        Objects.equals(this.avatarmedium, inlineResponse20013.avatarmedium) &&
        Objects.equals(this.avatarfull, inlineResponse20013.avatarfull) &&
        Objects.equals(this.profileurl, inlineResponse20013.profileurl) &&
        Objects.equals(this.personaname, inlineResponse20013.personaname) &&
        Objects.equals(this.cheese, inlineResponse20013.cheese) &&
        Objects.equals(this.fhUnavailable, inlineResponse20013.fhUnavailable) &&
        Objects.equals(this.loccountrycode, inlineResponse20013.loccountrycode) &&
        Objects.equals(this.name, inlineResponse20013.name) &&
        Objects.equals(this.countryCode, inlineResponse20013.countryCode) &&
        Objects.equals(this.fantasyRole, inlineResponse20013.fantasyRole) &&
        Objects.equals(this.teamId, inlineResponse20013.teamId) &&
        Objects.equals(this.teamName, inlineResponse20013.teamName) &&
        Objects.equals(this.teamTag, inlineResponse20013.teamTag) &&
        Objects.equals(this.isLocked, inlineResponse20013.isLocked) &&
        Objects.equals(this.isPro, inlineResponse20013.isPro) &&
        Objects.equals(this.lockedUntil, inlineResponse20013.lockedUntil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, steamid, avatar, avatarmedium, avatarfull, profileurl, personaname, cheese, fhUnavailable, loccountrycode, name, countryCode, fantasyRole, teamId, teamName, teamTag, isLocked, isPro, lockedUntil);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20013 {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    steamid: ").append(toIndentedString(steamid)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    avatarmedium: ").append(toIndentedString(avatarmedium)).append("\n");
    sb.append("    avatarfull: ").append(toIndentedString(avatarfull)).append("\n");
    sb.append("    profileurl: ").append(toIndentedString(profileurl)).append("\n");
    sb.append("    personaname: ").append(toIndentedString(personaname)).append("\n");
    sb.append("    cheese: ").append(toIndentedString(cheese)).append("\n");
    sb.append("    fhUnavailable: ").append(toIndentedString(fhUnavailable)).append("\n");
    sb.append("    loccountrycode: ").append(toIndentedString(loccountrycode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    fantasyRole: ").append(toIndentedString(fantasyRole)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    teamTag: ").append(toIndentedString(teamTag)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    isPro: ").append(toIndentedString(isPro)).append("\n");
    sb.append("    lockedUntil: ").append(toIndentedString(lockedUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

