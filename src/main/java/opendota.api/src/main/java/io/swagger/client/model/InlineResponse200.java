/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InlineResponse200Chat;
import io.swagger.client.model.InlineResponse200DraftTimings;
import io.swagger.client.model.InlineResponse200Players;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse200
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse200 {
  @SerializedName("match_id")
  private Integer matchId = null;

  @SerializedName("barracks_status_dire")
  private Integer barracksStatusDire = null;

  @SerializedName("barracks_status_radiant")
  private Integer barracksStatusRadiant = null;

  @SerializedName("chat")
  private List<InlineResponse200Chat> chat = null;

  @SerializedName("cluster")
  private Integer cluster = null;

  @SerializedName("cosmetics")
  private Object cosmetics = null;

  @SerializedName("dire_score")
  private Integer direScore = null;

  @SerializedName("draft_timings")
  private List<InlineResponse200DraftTimings> draftTimings = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("engine")
  private Integer engine = null;

  @SerializedName("first_blood_time")
  private Integer firstBloodTime = null;

  @SerializedName("game_mode")
  private Integer gameMode = null;

  @SerializedName("human_players")
  private Integer humanPlayers = null;

  @SerializedName("leagueid")
  private Integer leagueid = null;

  @SerializedName("lobby_type")
  private Integer lobbyType = null;

  @SerializedName("match_seq_num")
  private Integer matchSeqNum = null;

  @SerializedName("negative_votes")
  private Integer negativeVotes = null;

  @SerializedName("objectives")
  private Object objectives = null;

  @SerializedName("picks_bans")
  private Object picksBans = null;

  @SerializedName("positive_votes")
  private Integer positiveVotes = null;

  @SerializedName("radiant_gold_adv")
  private Object radiantGoldAdv = null;

  @SerializedName("radiant_score")
  private Integer radiantScore = null;

  @SerializedName("radiant_win")
  private Boolean radiantWin = null;

  @SerializedName("radiant_xp_adv")
  private Object radiantXpAdv = null;

  @SerializedName("start_time")
  private Integer startTime = null;

  @SerializedName("teamfights")
  private Object teamfights = null;

  @SerializedName("tower_status_dire")
  private Integer towerStatusDire = null;

  @SerializedName("tower_status_radiant")
  private Integer towerStatusRadiant = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("replay_salt")
  private Integer replaySalt = null;

  @SerializedName("series_id")
  private Integer seriesId = null;

  @SerializedName("series_type")
  private Integer seriesType = null;

  @SerializedName("radiant_team")
  private Object radiantTeam = null;

  @SerializedName("dire_team")
  private Object direTeam = null;

  @SerializedName("league")
  private Object league = null;

  @SerializedName("skill")
  private Integer skill = null;

  @SerializedName("players")
  private List<InlineResponse200Players> players = null;

  @SerializedName("patch")
  private Integer patch = null;

  @SerializedName("region")
  private Integer region = null;

  @SerializedName("all_word_counts")
  private Object allWordCounts = null;

  @SerializedName("my_word_counts")
  private Object myWordCounts = null;

  @SerializedName("throw")
  private Integer _throw = null;

  @SerializedName("comeback")
  private Integer comeback = null;

  @SerializedName("loss")
  private Integer loss = null;

  @SerializedName("win")
  private Integer win = null;

  @SerializedName("replay_url")
  private String replayUrl = null;

  public InlineResponse200 matchId(Integer matchId) {
    this.matchId = matchId;
    return this;
  }

   /**
   * The ID number of the match assigned by Valve
   * @return matchId
  **/
  @ApiModelProperty(value = "The ID number of the match assigned by Valve")
  public Integer getMatchId() {
    return matchId;
  }

  public void setMatchId(Integer matchId) {
    this.matchId = matchId;
  }

  public InlineResponse200 barracksStatusDire(Integer barracksStatusDire) {
    this.barracksStatusDire = barracksStatusDire;
    return this;
  }

   /**
   * Bitmask. An integer that represents a binary of which barracks are still standing. 63 would mean all barracks still stand at the end of the game.
   * @return barracksStatusDire
  **/
  @ApiModelProperty(value = "Bitmask. An integer that represents a binary of which barracks are still standing. 63 would mean all barracks still stand at the end of the game.")
  public Integer getBarracksStatusDire() {
    return barracksStatusDire;
  }

  public void setBarracksStatusDire(Integer barracksStatusDire) {
    this.barracksStatusDire = barracksStatusDire;
  }

  public InlineResponse200 barracksStatusRadiant(Integer barracksStatusRadiant) {
    this.barracksStatusRadiant = barracksStatusRadiant;
    return this;
  }

   /**
   * Bitmask. An integer that represents a binary of which barracks are still standing. 63 would mean all barracks still stand at the end of the game.
   * @return barracksStatusRadiant
  **/
  @ApiModelProperty(value = "Bitmask. An integer that represents a binary of which barracks are still standing. 63 would mean all barracks still stand at the end of the game.")
  public Integer getBarracksStatusRadiant() {
    return barracksStatusRadiant;
  }

  public void setBarracksStatusRadiant(Integer barracksStatusRadiant) {
    this.barracksStatusRadiant = barracksStatusRadiant;
  }

  public InlineResponse200 chat(List<InlineResponse200Chat> chat) {
    this.chat = chat;
    return this;
  }

  public InlineResponse200 addChatItem(InlineResponse200Chat chatItem) {
    if (this.chat == null) {
      this.chat = new ArrayList<InlineResponse200Chat>();
    }
    this.chat.add(chatItem);
    return this;
  }

   /**
   * Array containing information on the chat of the game
   * @return chat
  **/
  @ApiModelProperty(value = "Array containing information on the chat of the game")
  public List<InlineResponse200Chat> getChat() {
    return chat;
  }

  public void setChat(List<InlineResponse200Chat> chat) {
    this.chat = chat;
  }

  public InlineResponse200 cluster(Integer cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * cluster
   * @return cluster
  **/
  @ApiModelProperty(value = "cluster")
  public Integer getCluster() {
    return cluster;
  }

  public void setCluster(Integer cluster) {
    this.cluster = cluster;
  }

  public InlineResponse200 cosmetics(Object cosmetics) {
    this.cosmetics = cosmetics;
    return this;
  }

   /**
   * cosmetics
   * @return cosmetics
  **/
  @ApiModelProperty(value = "cosmetics")
  public Object getCosmetics() {
    return cosmetics;
  }

  public void setCosmetics(Object cosmetics) {
    this.cosmetics = cosmetics;
  }

  public InlineResponse200 direScore(Integer direScore) {
    this.direScore = direScore;
    return this;
  }

   /**
   * Final score for Dire (number of kills on Radiant)
   * @return direScore
  **/
  @ApiModelProperty(value = "Final score for Dire (number of kills on Radiant)")
  public Integer getDireScore() {
    return direScore;
  }

  public void setDireScore(Integer direScore) {
    this.direScore = direScore;
  }

  public InlineResponse200 draftTimings(List<InlineResponse200DraftTimings> draftTimings) {
    this.draftTimings = draftTimings;
    return this;
  }

  public InlineResponse200 addDraftTimingsItem(InlineResponse200DraftTimings draftTimingsItem) {
    if (this.draftTimings == null) {
      this.draftTimings = new ArrayList<InlineResponse200DraftTimings>();
    }
    this.draftTimings.add(draftTimingsItem);
    return this;
  }

   /**
   * draft_timings
   * @return draftTimings
  **/
  @ApiModelProperty(value = "draft_timings")
  public List<InlineResponse200DraftTimings> getDraftTimings() {
    return draftTimings;
  }

  public void setDraftTimings(List<InlineResponse200DraftTimings> draftTimings) {
    this.draftTimings = draftTimings;
  }

  public InlineResponse200 duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Duration of the game in seconds
   * @return duration
  **/
  @ApiModelProperty(value = "Duration of the game in seconds")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public InlineResponse200 engine(Integer engine) {
    this.engine = engine;
    return this;
  }

   /**
   * engine
   * @return engine
  **/
  @ApiModelProperty(value = "engine")
  public Integer getEngine() {
    return engine;
  }

  public void setEngine(Integer engine) {
    this.engine = engine;
  }

  public InlineResponse200 firstBloodTime(Integer firstBloodTime) {
    this.firstBloodTime = firstBloodTime;
    return this;
  }

   /**
   * Time in seconds at which first blood occurred
   * @return firstBloodTime
  **/
  @ApiModelProperty(value = "Time in seconds at which first blood occurred")
  public Integer getFirstBloodTime() {
    return firstBloodTime;
  }

  public void setFirstBloodTime(Integer firstBloodTime) {
    this.firstBloodTime = firstBloodTime;
  }

  public InlineResponse200 gameMode(Integer gameMode) {
    this.gameMode = gameMode;
    return this;
  }

   /**
   * Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json
   * @return gameMode
  **/
  @ApiModelProperty(value = "Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json")
  public Integer getGameMode() {
    return gameMode;
  }

  public void setGameMode(Integer gameMode) {
    this.gameMode = gameMode;
  }

  public InlineResponse200 humanPlayers(Integer humanPlayers) {
    this.humanPlayers = humanPlayers;
    return this;
  }

   /**
   * Number of human players in the game
   * @return humanPlayers
  **/
  @ApiModelProperty(value = "Number of human players in the game")
  public Integer getHumanPlayers() {
    return humanPlayers;
  }

  public void setHumanPlayers(Integer humanPlayers) {
    this.humanPlayers = humanPlayers;
  }

  public InlineResponse200 leagueid(Integer leagueid) {
    this.leagueid = leagueid;
    return this;
  }

   /**
   * leagueid
   * @return leagueid
  **/
  @ApiModelProperty(value = "leagueid")
  public Integer getLeagueid() {
    return leagueid;
  }

  public void setLeagueid(Integer leagueid) {
    this.leagueid = leagueid;
  }

  public InlineResponse200 lobbyType(Integer lobbyType) {
    this.lobbyType = lobbyType;
    return this;
  }

   /**
   * Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json
   * @return lobbyType
  **/
  @ApiModelProperty(value = "Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json")
  public Integer getLobbyType() {
    return lobbyType;
  }

  public void setLobbyType(Integer lobbyType) {
    this.lobbyType = lobbyType;
  }

  public InlineResponse200 matchSeqNum(Integer matchSeqNum) {
    this.matchSeqNum = matchSeqNum;
    return this;
  }

   /**
   * match_seq_num
   * @return matchSeqNum
  **/
  @ApiModelProperty(value = "match_seq_num")
  public Integer getMatchSeqNum() {
    return matchSeqNum;
  }

  public void setMatchSeqNum(Integer matchSeqNum) {
    this.matchSeqNum = matchSeqNum;
  }

  public InlineResponse200 negativeVotes(Integer negativeVotes) {
    this.negativeVotes = negativeVotes;
    return this;
  }

   /**
   * Number of negative votes the replay received in the in-game client
   * @return negativeVotes
  **/
  @ApiModelProperty(value = "Number of negative votes the replay received in the in-game client")
  public Integer getNegativeVotes() {
    return negativeVotes;
  }

  public void setNegativeVotes(Integer negativeVotes) {
    this.negativeVotes = negativeVotes;
  }

  public InlineResponse200 objectives(Object objectives) {
    this.objectives = objectives;
    return this;
  }

   /**
   * objectives
   * @return objectives
  **/
  @ApiModelProperty(value = "objectives")
  public Object getObjectives() {
    return objectives;
  }

  public void setObjectives(Object objectives) {
    this.objectives = objectives;
  }

  public InlineResponse200 picksBans(Object picksBans) {
    this.picksBans = picksBans;
    return this;
  }

   /**
   * Object containing information on the draft. Each pick/ban contains a boolean relating to whether the choice is a pick or a ban, the hero ID, the team the picked or banned it, and the order.
   * @return picksBans
  **/
  @ApiModelProperty(value = "Object containing information on the draft. Each pick/ban contains a boolean relating to whether the choice is a pick or a ban, the hero ID, the team the picked or banned it, and the order.")
  public Object getPicksBans() {
    return picksBans;
  }

  public void setPicksBans(Object picksBans) {
    this.picksBans = picksBans;
  }

  public InlineResponse200 positiveVotes(Integer positiveVotes) {
    this.positiveVotes = positiveVotes;
    return this;
  }

   /**
   * Number of positive votes the replay received in the in-game client
   * @return positiveVotes
  **/
  @ApiModelProperty(value = "Number of positive votes the replay received in the in-game client")
  public Integer getPositiveVotes() {
    return positiveVotes;
  }

  public void setPositiveVotes(Integer positiveVotes) {
    this.positiveVotes = positiveVotes;
  }

  public InlineResponse200 radiantGoldAdv(Object radiantGoldAdv) {
    this.radiantGoldAdv = radiantGoldAdv;
    return this;
  }

   /**
   * Array of the Radiant gold advantage at each minute in the game. A negative number means that Radiant is behind, and thus it is their gold disadvantage. 
   * @return radiantGoldAdv
  **/
  @ApiModelProperty(value = "Array of the Radiant gold advantage at each minute in the game. A negative number means that Radiant is behind, and thus it is their gold disadvantage. ")
  public Object getRadiantGoldAdv() {
    return radiantGoldAdv;
  }

  public void setRadiantGoldAdv(Object radiantGoldAdv) {
    this.radiantGoldAdv = radiantGoldAdv;
  }

  public InlineResponse200 radiantScore(Integer radiantScore) {
    this.radiantScore = radiantScore;
    return this;
  }

   /**
   * Final score for Radiant (number of kills on Radiant)
   * @return radiantScore
  **/
  @ApiModelProperty(value = "Final score for Radiant (number of kills on Radiant)")
  public Integer getRadiantScore() {
    return radiantScore;
  }

  public void setRadiantScore(Integer radiantScore) {
    this.radiantScore = radiantScore;
  }

  public InlineResponse200 radiantWin(Boolean radiantWin) {
    this.radiantWin = radiantWin;
    return this;
  }

   /**
   * Boolean indicating whether Radiant won the match
   * @return radiantWin
  **/
  @ApiModelProperty(value = "Boolean indicating whether Radiant won the match")
  public Boolean isRadiantWin() {
    return radiantWin;
  }

  public void setRadiantWin(Boolean radiantWin) {
    this.radiantWin = radiantWin;
  }

  public InlineResponse200 radiantXpAdv(Object radiantXpAdv) {
    this.radiantXpAdv = radiantXpAdv;
    return this;
  }

   /**
   * Array of the Radiant experience advantage at each minute in the game. A negative number means that Radiant is behind, and thus it is their experience disadvantage. 
   * @return radiantXpAdv
  **/
  @ApiModelProperty(value = "Array of the Radiant experience advantage at each minute in the game. A negative number means that Radiant is behind, and thus it is their experience disadvantage. ")
  public Object getRadiantXpAdv() {
    return radiantXpAdv;
  }

  public void setRadiantXpAdv(Object radiantXpAdv) {
    this.radiantXpAdv = radiantXpAdv;
  }

  public InlineResponse200 startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The Unix timestamp at which the game started
   * @return startTime
  **/
  @ApiModelProperty(value = "The Unix timestamp at which the game started")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public InlineResponse200 teamfights(Object teamfights) {
    this.teamfights = teamfights;
    return this;
  }

   /**
   * teamfights
   * @return teamfights
  **/
  @ApiModelProperty(value = "teamfights")
  public Object getTeamfights() {
    return teamfights;
  }

  public void setTeamfights(Object teamfights) {
    this.teamfights = teamfights;
  }

  public InlineResponse200 towerStatusDire(Integer towerStatusDire) {
    this.towerStatusDire = towerStatusDire;
    return this;
  }

   /**
   * Bitmask. An integer that represents a binary of which Dire towers are still standing.
   * @return towerStatusDire
  **/
  @ApiModelProperty(value = "Bitmask. An integer that represents a binary of which Dire towers are still standing.")
  public Integer getTowerStatusDire() {
    return towerStatusDire;
  }

  public void setTowerStatusDire(Integer towerStatusDire) {
    this.towerStatusDire = towerStatusDire;
  }

  public InlineResponse200 towerStatusRadiant(Integer towerStatusRadiant) {
    this.towerStatusRadiant = towerStatusRadiant;
    return this;
  }

   /**
   * Bitmask. An integer that represents a binary of which Radiant towers are still standing.
   * @return towerStatusRadiant
  **/
  @ApiModelProperty(value = "Bitmask. An integer that represents a binary of which Radiant towers are still standing.")
  public Integer getTowerStatusRadiant() {
    return towerStatusRadiant;
  }

  public void setTowerStatusRadiant(Integer towerStatusRadiant) {
    this.towerStatusRadiant = towerStatusRadiant;
  }

  public InlineResponse200 version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Parse version, used internally by OpenDota
   * @return version
  **/
  @ApiModelProperty(value = "Parse version, used internally by OpenDota")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public InlineResponse200 replaySalt(Integer replaySalt) {
    this.replaySalt = replaySalt;
    return this;
  }

   /**
   * replay_salt
   * @return replaySalt
  **/
  @ApiModelProperty(value = "replay_salt")
  public Integer getReplaySalt() {
    return replaySalt;
  }

  public void setReplaySalt(Integer replaySalt) {
    this.replaySalt = replaySalt;
  }

  public InlineResponse200 seriesId(Integer seriesId) {
    this.seriesId = seriesId;
    return this;
  }

   /**
   * series_id
   * @return seriesId
  **/
  @ApiModelProperty(value = "series_id")
  public Integer getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(Integer seriesId) {
    this.seriesId = seriesId;
  }

  public InlineResponse200 seriesType(Integer seriesType) {
    this.seriesType = seriesType;
    return this;
  }

   /**
   * series_type
   * @return seriesType
  **/
  @ApiModelProperty(value = "series_type")
  public Integer getSeriesType() {
    return seriesType;
  }

  public void setSeriesType(Integer seriesType) {
    this.seriesType = seriesType;
  }

  public InlineResponse200 radiantTeam(Object radiantTeam) {
    this.radiantTeam = radiantTeam;
    return this;
  }

   /**
   * radiant_team
   * @return radiantTeam
  **/
  @ApiModelProperty(value = "radiant_team")
  public Object getRadiantTeam() {
    return radiantTeam;
  }

  public void setRadiantTeam(Object radiantTeam) {
    this.radiantTeam = radiantTeam;
  }

  public InlineResponse200 direTeam(Object direTeam) {
    this.direTeam = direTeam;
    return this;
  }

   /**
   * dire_team
   * @return direTeam
  **/
  @ApiModelProperty(value = "dire_team")
  public Object getDireTeam() {
    return direTeam;
  }

  public void setDireTeam(Object direTeam) {
    this.direTeam = direTeam;
  }

  public InlineResponse200 league(Object league) {
    this.league = league;
    return this;
  }

   /**
   * league
   * @return league
  **/
  @ApiModelProperty(value = "league")
  public Object getLeague() {
    return league;
  }

  public void setLeague(Object league) {
    this.league = league;
  }

  public InlineResponse200 skill(Integer skill) {
    this.skill = skill;
    return this;
  }

   /**
   * Skill bracket assigned by Valve (Normal, High, Very High)
   * @return skill
  **/
  @ApiModelProperty(value = "Skill bracket assigned by Valve (Normal, High, Very High)")
  public Integer getSkill() {
    return skill;
  }

  public void setSkill(Integer skill) {
    this.skill = skill;
  }

  public InlineResponse200 players(List<InlineResponse200Players> players) {
    this.players = players;
    return this;
  }

  public InlineResponse200 addPlayersItem(InlineResponse200Players playersItem) {
    if (this.players == null) {
      this.players = new ArrayList<InlineResponse200Players>();
    }
    this.players.add(playersItem);
    return this;
  }

   /**
   * Array of information on individual players
   * @return players
  **/
  @ApiModelProperty(value = "Array of information on individual players")
  public List<InlineResponse200Players> getPlayers() {
    return players;
  }

  public void setPlayers(List<InlineResponse200Players> players) {
    this.players = players;
  }

  public InlineResponse200 patch(Integer patch) {
    this.patch = patch;
    return this;
  }

   /**
   * Information on the patch version the game is played on
   * @return patch
  **/
  @ApiModelProperty(value = "Information on the patch version the game is played on")
  public Integer getPatch() {
    return patch;
  }

  public void setPatch(Integer patch) {
    this.patch = patch;
  }

  public InlineResponse200 region(Integer region) {
    this.region = region;
    return this;
  }

   /**
   * Integer corresponding to the region the game was played on
   * @return region
  **/
  @ApiModelProperty(value = "Integer corresponding to the region the game was played on")
  public Integer getRegion() {
    return region;
  }

  public void setRegion(Integer region) {
    this.region = region;
  }

  public InlineResponse200 allWordCounts(Object allWordCounts) {
    this.allWordCounts = allWordCounts;
    return this;
  }

   /**
   * Word counts of the all chat messages in the player&#39;s games
   * @return allWordCounts
  **/
  @ApiModelProperty(value = "Word counts of the all chat messages in the player's games")
  public Object getAllWordCounts() {
    return allWordCounts;
  }

  public void setAllWordCounts(Object allWordCounts) {
    this.allWordCounts = allWordCounts;
  }

  public InlineResponse200 myWordCounts(Object myWordCounts) {
    this.myWordCounts = myWordCounts;
    return this;
  }

   /**
   * Word counts of the player&#39;s all chat messages
   * @return myWordCounts
  **/
  @ApiModelProperty(value = "Word counts of the player's all chat messages")
  public Object getMyWordCounts() {
    return myWordCounts;
  }

  public void setMyWordCounts(Object myWordCounts) {
    this.myWordCounts = myWordCounts;
  }

  public InlineResponse200 _throw(Integer _throw) {
    this._throw = _throw;
    return this;
  }

   /**
   * Maximum gold advantage of the player&#39;s team if they lost the match
   * @return _throw
  **/
  @ApiModelProperty(value = "Maximum gold advantage of the player's team if they lost the match")
  public Integer getThrow() {
    return _throw;
  }

  public void setThrow(Integer _throw) {
    this._throw = _throw;
  }

  public InlineResponse200 comeback(Integer comeback) {
    this.comeback = comeback;
    return this;
  }

   /**
   * Maximum gold disadvantage of the player&#39;s team if they won the match
   * @return comeback
  **/
  @ApiModelProperty(value = "Maximum gold disadvantage of the player's team if they won the match")
  public Integer getComeback() {
    return comeback;
  }

  public void setComeback(Integer comeback) {
    this.comeback = comeback;
  }

  public InlineResponse200 loss(Integer loss) {
    this.loss = loss;
    return this;
  }

   /**
   * Maximum gold disadvantage of the player&#39;s team if they lost the match
   * @return loss
  **/
  @ApiModelProperty(value = "Maximum gold disadvantage of the player's team if they lost the match")
  public Integer getLoss() {
    return loss;
  }

  public void setLoss(Integer loss) {
    this.loss = loss;
  }

  public InlineResponse200 win(Integer win) {
    this.win = win;
    return this;
  }

   /**
   * Maximum gold advantage of the player&#39;s team if they won the match
   * @return win
  **/
  @ApiModelProperty(value = "Maximum gold advantage of the player's team if they won the match")
  public Integer getWin() {
    return win;
  }

  public void setWin(Integer win) {
    this.win = win;
  }

  public InlineResponse200 replayUrl(String replayUrl) {
    this.replayUrl = replayUrl;
    return this;
  }

   /**
   * replay_url
   * @return replayUrl
  **/
  @ApiModelProperty(value = "replay_url")
  public String getReplayUrl() {
    return replayUrl;
  }

  public void setReplayUrl(String replayUrl) {
    this.replayUrl = replayUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.matchId, inlineResponse200.matchId) &&
        Objects.equals(this.barracksStatusDire, inlineResponse200.barracksStatusDire) &&
        Objects.equals(this.barracksStatusRadiant, inlineResponse200.barracksStatusRadiant) &&
        Objects.equals(this.chat, inlineResponse200.chat) &&
        Objects.equals(this.cluster, inlineResponse200.cluster) &&
        Objects.equals(this.cosmetics, inlineResponse200.cosmetics) &&
        Objects.equals(this.direScore, inlineResponse200.direScore) &&
        Objects.equals(this.draftTimings, inlineResponse200.draftTimings) &&
        Objects.equals(this.duration, inlineResponse200.duration) &&
        Objects.equals(this.engine, inlineResponse200.engine) &&
        Objects.equals(this.firstBloodTime, inlineResponse200.firstBloodTime) &&
        Objects.equals(this.gameMode, inlineResponse200.gameMode) &&
        Objects.equals(this.humanPlayers, inlineResponse200.humanPlayers) &&
        Objects.equals(this.leagueid, inlineResponse200.leagueid) &&
        Objects.equals(this.lobbyType, inlineResponse200.lobbyType) &&
        Objects.equals(this.matchSeqNum, inlineResponse200.matchSeqNum) &&
        Objects.equals(this.negativeVotes, inlineResponse200.negativeVotes) &&
        Objects.equals(this.objectives, inlineResponse200.objectives) &&
        Objects.equals(this.picksBans, inlineResponse200.picksBans) &&
        Objects.equals(this.positiveVotes, inlineResponse200.positiveVotes) &&
        Objects.equals(this.radiantGoldAdv, inlineResponse200.radiantGoldAdv) &&
        Objects.equals(this.radiantScore, inlineResponse200.radiantScore) &&
        Objects.equals(this.radiantWin, inlineResponse200.radiantWin) &&
        Objects.equals(this.radiantXpAdv, inlineResponse200.radiantXpAdv) &&
        Objects.equals(this.startTime, inlineResponse200.startTime) &&
        Objects.equals(this.teamfights, inlineResponse200.teamfights) &&
        Objects.equals(this.towerStatusDire, inlineResponse200.towerStatusDire) &&
        Objects.equals(this.towerStatusRadiant, inlineResponse200.towerStatusRadiant) &&
        Objects.equals(this.version, inlineResponse200.version) &&
        Objects.equals(this.replaySalt, inlineResponse200.replaySalt) &&
        Objects.equals(this.seriesId, inlineResponse200.seriesId) &&
        Objects.equals(this.seriesType, inlineResponse200.seriesType) &&
        Objects.equals(this.radiantTeam, inlineResponse200.radiantTeam) &&
        Objects.equals(this.direTeam, inlineResponse200.direTeam) &&
        Objects.equals(this.league, inlineResponse200.league) &&
        Objects.equals(this.skill, inlineResponse200.skill) &&
        Objects.equals(this.players, inlineResponse200.players) &&
        Objects.equals(this.patch, inlineResponse200.patch) &&
        Objects.equals(this.region, inlineResponse200.region) &&
        Objects.equals(this.allWordCounts, inlineResponse200.allWordCounts) &&
        Objects.equals(this.myWordCounts, inlineResponse200.myWordCounts) &&
        Objects.equals(this._throw, inlineResponse200._throw) &&
        Objects.equals(this.comeback, inlineResponse200.comeback) &&
        Objects.equals(this.loss, inlineResponse200.loss) &&
        Objects.equals(this.win, inlineResponse200.win) &&
        Objects.equals(this.replayUrl, inlineResponse200.replayUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchId, barracksStatusDire, barracksStatusRadiant, chat, cluster, cosmetics, direScore, draftTimings, duration, engine, firstBloodTime, gameMode, humanPlayers, leagueid, lobbyType, matchSeqNum, negativeVotes, objectives, picksBans, positiveVotes, radiantGoldAdv, radiantScore, radiantWin, radiantXpAdv, startTime, teamfights, towerStatusDire, towerStatusRadiant, version, replaySalt, seriesId, seriesType, radiantTeam, direTeam, league, skill, players, patch, region, allWordCounts, myWordCounts, _throw, comeback, loss, win, replayUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    
    sb.append("    matchId: ").append(toIndentedString(matchId)).append("\n");
    sb.append("    barracksStatusDire: ").append(toIndentedString(barracksStatusDire)).append("\n");
    sb.append("    barracksStatusRadiant: ").append(toIndentedString(barracksStatusRadiant)).append("\n");
    sb.append("    chat: ").append(toIndentedString(chat)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    cosmetics: ").append(toIndentedString(cosmetics)).append("\n");
    sb.append("    direScore: ").append(toIndentedString(direScore)).append("\n");
    sb.append("    draftTimings: ").append(toIndentedString(draftTimings)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    firstBloodTime: ").append(toIndentedString(firstBloodTime)).append("\n");
    sb.append("    gameMode: ").append(toIndentedString(gameMode)).append("\n");
    sb.append("    humanPlayers: ").append(toIndentedString(humanPlayers)).append("\n");
    sb.append("    leagueid: ").append(toIndentedString(leagueid)).append("\n");
    sb.append("    lobbyType: ").append(toIndentedString(lobbyType)).append("\n");
    sb.append("    matchSeqNum: ").append(toIndentedString(matchSeqNum)).append("\n");
    sb.append("    negativeVotes: ").append(toIndentedString(negativeVotes)).append("\n");
    sb.append("    objectives: ").append(toIndentedString(objectives)).append("\n");
    sb.append("    picksBans: ").append(toIndentedString(picksBans)).append("\n");
    sb.append("    positiveVotes: ").append(toIndentedString(positiveVotes)).append("\n");
    sb.append("    radiantGoldAdv: ").append(toIndentedString(radiantGoldAdv)).append("\n");
    sb.append("    radiantScore: ").append(toIndentedString(radiantScore)).append("\n");
    sb.append("    radiantWin: ").append(toIndentedString(radiantWin)).append("\n");
    sb.append("    radiantXpAdv: ").append(toIndentedString(radiantXpAdv)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    teamfights: ").append(toIndentedString(teamfights)).append("\n");
    sb.append("    towerStatusDire: ").append(toIndentedString(towerStatusDire)).append("\n");
    sb.append("    towerStatusRadiant: ").append(toIndentedString(towerStatusRadiant)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    replaySalt: ").append(toIndentedString(replaySalt)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    seriesType: ").append(toIndentedString(seriesType)).append("\n");
    sb.append("    radiantTeam: ").append(toIndentedString(radiantTeam)).append("\n");
    sb.append("    direTeam: ").append(toIndentedString(direTeam)).append("\n");
    sb.append("    league: ").append(toIndentedString(league)).append("\n");
    sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
    sb.append("    players: ").append(toIndentedString(players)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    allWordCounts: ").append(toIndentedString(allWordCounts)).append("\n");
    sb.append("    myWordCounts: ").append(toIndentedString(myWordCounts)).append("\n");
    sb.append("    _throw: ").append(toIndentedString(_throw)).append("\n");
    sb.append("    comeback: ").append(toIndentedString(comeback)).append("\n");
    sb.append("    loss: ").append(toIndentedString(loss)).append("\n");
    sb.append("    win: ").append(toIndentedString(win)).append("\n");
    sb.append("    replayUrl: ").append(toIndentedString(replayUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

