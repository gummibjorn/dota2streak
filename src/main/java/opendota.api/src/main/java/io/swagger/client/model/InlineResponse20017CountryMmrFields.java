/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20017CountryMmrFields
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse20017CountryMmrFields {
  @SerializedName("name")
  private String name = null;

  @SerializedName("tableID")
  private Integer tableID = null;

  @SerializedName("columnID")
  private Integer columnID = null;

  @SerializedName("dataTypeID")
  private Integer dataTypeID = null;

  @SerializedName("dataTypeSize")
  private Integer dataTypeSize = null;

  @SerializedName("dataTypeModifier")
  private Integer dataTypeModifier = null;

  @SerializedName("format")
  private String format = null;

  public InlineResponse20017CountryMmrFields name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @ApiModelProperty(value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20017CountryMmrFields tableID(Integer tableID) {
    this.tableID = tableID;
    return this;
  }

   /**
   * tableID
   * @return tableID
  **/
  @ApiModelProperty(value = "tableID")
  public Integer getTableID() {
    return tableID;
  }

  public void setTableID(Integer tableID) {
    this.tableID = tableID;
  }

  public InlineResponse20017CountryMmrFields columnID(Integer columnID) {
    this.columnID = columnID;
    return this;
  }

   /**
   * columnID
   * @return columnID
  **/
  @ApiModelProperty(value = "columnID")
  public Integer getColumnID() {
    return columnID;
  }

  public void setColumnID(Integer columnID) {
    this.columnID = columnID;
  }

  public InlineResponse20017CountryMmrFields dataTypeID(Integer dataTypeID) {
    this.dataTypeID = dataTypeID;
    return this;
  }

   /**
   * dataTypeID
   * @return dataTypeID
  **/
  @ApiModelProperty(value = "dataTypeID")
  public Integer getDataTypeID() {
    return dataTypeID;
  }

  public void setDataTypeID(Integer dataTypeID) {
    this.dataTypeID = dataTypeID;
  }

  public InlineResponse20017CountryMmrFields dataTypeSize(Integer dataTypeSize) {
    this.dataTypeSize = dataTypeSize;
    return this;
  }

   /**
   * dataTypeSize
   * @return dataTypeSize
  **/
  @ApiModelProperty(value = "dataTypeSize")
  public Integer getDataTypeSize() {
    return dataTypeSize;
  }

  public void setDataTypeSize(Integer dataTypeSize) {
    this.dataTypeSize = dataTypeSize;
  }

  public InlineResponse20017CountryMmrFields dataTypeModifier(Integer dataTypeModifier) {
    this.dataTypeModifier = dataTypeModifier;
    return this;
  }

   /**
   * dataTypeModifier
   * @return dataTypeModifier
  **/
  @ApiModelProperty(value = "dataTypeModifier")
  public Integer getDataTypeModifier() {
    return dataTypeModifier;
  }

  public void setDataTypeModifier(Integer dataTypeModifier) {
    this.dataTypeModifier = dataTypeModifier;
  }

  public InlineResponse20017CountryMmrFields format(String format) {
    this.format = format;
    return this;
  }

   /**
   * format
   * @return format
  **/
  @ApiModelProperty(value = "format")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20017CountryMmrFields inlineResponse20017CountryMmrFields = (InlineResponse20017CountryMmrFields) o;
    return Objects.equals(this.name, inlineResponse20017CountryMmrFields.name) &&
        Objects.equals(this.tableID, inlineResponse20017CountryMmrFields.tableID) &&
        Objects.equals(this.columnID, inlineResponse20017CountryMmrFields.columnID) &&
        Objects.equals(this.dataTypeID, inlineResponse20017CountryMmrFields.dataTypeID) &&
        Objects.equals(this.dataTypeSize, inlineResponse20017CountryMmrFields.dataTypeSize) &&
        Objects.equals(this.dataTypeModifier, inlineResponse20017CountryMmrFields.dataTypeModifier) &&
        Objects.equals(this.format, inlineResponse20017CountryMmrFields.format);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20017CountryMmrFields {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tableID: ").append(toIndentedString(tableID)).append("\n");
    sb.append("    columnID: ").append(toIndentedString(columnID)).append("\n");
    sb.append("    dataTypeID: ").append(toIndentedString(dataTypeID)).append("\n");
    sb.append("    dataTypeSize: ").append(toIndentedString(dataTypeSize)).append("\n");
    sb.append("    dataTypeModifier: ").append(toIndentedString(dataTypeModifier)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

