/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InlineResponse200BuybackLog;
import io.swagger.client.model.InlineResponse200KillsLog;
import io.swagger.client.model.InlineResponse200PurchaseLog;
import io.swagger.client.model.InlineResponse200RunesLog;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * player
 */
@ApiModel(description = "player")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse200Players {
  @SerializedName("match_id")
  private Integer matchId = null;

  @SerializedName("player_slot")
  private Integer playerSlot = null;

  @SerializedName("ability_upgrades_arr")
  private List<Integer> abilityUpgradesArr = null;

  @SerializedName("ability_uses")
  private Object abilityUses = null;

  @SerializedName("ability_targets")
  private Object abilityTargets = null;

  @SerializedName("damage_targets")
  private Object damageTargets = null;

  @SerializedName("account_id")
  private Integer accountId = null;

  @SerializedName("actions")
  private Object actions = null;

  @SerializedName("additional_units")
  private Object additionalUnits = null;

  @SerializedName("assists")
  private Integer assists = null;

  @SerializedName("backpack_0")
  private Integer backpack0 = null;

  @SerializedName("backpack_1")
  private Integer backpack1 = null;

  @SerializedName("backpack_2")
  private Integer backpack2 = null;

  @SerializedName("buyback_log")
  private List<InlineResponse200BuybackLog> buybackLog = null;

  @SerializedName("camps_stacked")
  private Integer campsStacked = null;

  @SerializedName("creeps_stacked")
  private Integer creepsStacked = null;

  @SerializedName("damage")
  private Object damage = null;

  @SerializedName("damage_inflictor")
  private Object damageInflictor = null;

  @SerializedName("damage_inflictor_received")
  private Object damageInflictorReceived = null;

  @SerializedName("damage_taken")
  private Object damageTaken = null;

  @SerializedName("deaths")
  private Integer deaths = null;

  @SerializedName("denies")
  private Integer denies = null;

  @SerializedName("dn_t")
  private List<Integer> dnT = null;

  @SerializedName("gold")
  private Integer gold = null;

  @SerializedName("gold_per_min")
  private Integer goldPerMin = null;

  @SerializedName("gold_reasons")
  private Object goldReasons = null;

  @SerializedName("gold_spent")
  private Integer goldSpent = null;

  @SerializedName("gold_t")
  private List<Integer> goldT = null;

  @SerializedName("hero_damage")
  private Integer heroDamage = null;

  @SerializedName("hero_healing")
  private Integer heroHealing = null;

  @SerializedName("hero_hits")
  private Object heroHits = null;

  @SerializedName("hero_id")
  private Integer heroId = null;

  @SerializedName("item_0")
  private Integer item0 = null;

  @SerializedName("item_1")
  private Integer item1 = null;

  @SerializedName("item_2")
  private Integer item2 = null;

  @SerializedName("item_3")
  private Integer item3 = null;

  @SerializedName("item_4")
  private Integer item4 = null;

  @SerializedName("item_5")
  private Integer item5 = null;

  @SerializedName("item_uses")
  private Object itemUses = null;

  @SerializedName("kill_streaks")
  private Object killStreaks = null;

  @SerializedName("killed")
  private Object killed = null;

  @SerializedName("killed_by")
  private Object killedBy = null;

  @SerializedName("kills")
  private Integer kills = null;

  @SerializedName("kills_log")
  private List<InlineResponse200KillsLog> killsLog = null;

  @SerializedName("lane_pos")
  private Object lanePos = null;

  @SerializedName("last_hits")
  private Integer lastHits = null;

  @SerializedName("leaver_status")
  private Integer leaverStatus = null;

  @SerializedName("level")
  private Integer level = null;

  @SerializedName("lh_t")
  private List<Integer> lhT = null;

  @SerializedName("life_state")
  private Object lifeState = null;

  @SerializedName("max_hero_hit")
  private Object maxHeroHit = null;

  @SerializedName("multi_kills")
  private Object multiKills = null;

  @SerializedName("obs")
  private Object obs = null;

  @SerializedName("obs_left_log")
  private List<Object> obsLeftLog = null;

  @SerializedName("obs_log")
  private List<Object> obsLog = null;

  @SerializedName("obs_placed")
  private Integer obsPlaced = null;

  @SerializedName("party_id")
  private Integer partyId = null;

  @SerializedName("permanent_buffs")
  private List<Object> permanentBuffs = null;

  @SerializedName("pings")
  private Integer pings = null;

  @SerializedName("purchase")
  private Object purchase = null;

  @SerializedName("purchase_log")
  private List<InlineResponse200PurchaseLog> purchaseLog = null;

  @SerializedName("rune_pickups")
  private Integer runePickups = null;

  @SerializedName("runes")
  private Map<String, Integer> runes = null;

  @SerializedName("runes_log")
  private List<InlineResponse200RunesLog> runesLog = null;

  @SerializedName("sen")
  private Object sen = null;

  @SerializedName("sen_left_log")
  private List<Object> senLeftLog = null;

  @SerializedName("sen_log")
  private List<Object> senLog = null;

  @SerializedName("sen_placed")
  private Integer senPlaced = null;

  @SerializedName("stuns")
  private BigDecimal stuns = null;

  @SerializedName("times")
  private List<Integer> times = null;

  @SerializedName("tower_damage")
  private Integer towerDamage = null;

  @SerializedName("xp_per_min")
  private Integer xpPerMin = null;

  @SerializedName("xp_reasons")
  private Object xpReasons = null;

  @SerializedName("xp_t")
  private List<Integer> xpT = null;

  @SerializedName("personaname")
  private String personaname = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("radiant_win")
  private Boolean radiantWin = null;

  @SerializedName("start_time")
  private Integer startTime = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("cluster")
  private Integer cluster = null;

  @SerializedName("lobby_type")
  private Integer lobbyType = null;

  @SerializedName("game_mode")
  private Integer gameMode = null;

  @SerializedName("patch")
  private Integer patch = null;

  @SerializedName("region")
  private Integer region = null;

  @SerializedName("isRadiant")
  private Boolean isRadiant = null;

  @SerializedName("win")
  private Integer win = null;

  @SerializedName("lose")
  private Integer lose = null;

  @SerializedName("total_gold")
  private Integer totalGold = null;

  @SerializedName("total_xp")
  private Integer totalXp = null;

  @SerializedName("kills_per_min")
  private BigDecimal killsPerMin = null;

  @SerializedName("kda")
  private BigDecimal kda = null;

  @SerializedName("abandons")
  private Integer abandons = null;

  @SerializedName("neutral_kills")
  private Integer neutralKills = null;

  @SerializedName("tower_kills")
  private Integer towerKills = null;

  @SerializedName("courier_kills")
  private Integer courierKills = null;

  @SerializedName("lane_kills")
  private Integer laneKills = null;

  @SerializedName("hero_kills")
  private Integer heroKills = null;

  @SerializedName("observer_kills")
  private Integer observerKills = null;

  @SerializedName("sentry_kills")
  private Integer sentryKills = null;

  @SerializedName("roshan_kills")
  private Integer roshanKills = null;

  @SerializedName("necronomicon_kills")
  private Integer necronomiconKills = null;

  @SerializedName("ancient_kills")
  private Integer ancientKills = null;

  @SerializedName("buyback_count")
  private Integer buybackCount = null;

  @SerializedName("observer_uses")
  private Integer observerUses = null;

  @SerializedName("sentry_uses")
  private Integer sentryUses = null;

  @SerializedName("lane_efficiency")
  private BigDecimal laneEfficiency = null;

  @SerializedName("lane_efficiency_pct")
  private BigDecimal laneEfficiencyPct = null;

  @SerializedName("lane")
  private Integer lane = null;

  @SerializedName("lane_role")
  private Integer laneRole = null;

  @SerializedName("is_roaming")
  private Boolean isRoaming = null;

  @SerializedName("purchase_time")
  private Object purchaseTime = null;

  @SerializedName("first_purchase_time")
  private Object firstPurchaseTime = null;

  @SerializedName("item_win")
  private Object itemWin = null;

  @SerializedName("item_usage")
  private Object itemUsage = null;

  @SerializedName("purchase_tpscroll")
  private Object purchaseTpscroll = null;

  @SerializedName("actions_per_min")
  private Integer actionsPerMin = null;

  @SerializedName("life_state_dead")
  private Integer lifeStateDead = null;

  @SerializedName("rank_tier")
  private Integer rankTier = null;

  @SerializedName("cosmetics")
  private List<Integer> cosmetics = null;

  @SerializedName("benchmarks")
  private Object benchmarks = null;

  public InlineResponse200Players matchId(Integer matchId) {
    this.matchId = matchId;
    return this;
  }

   /**
   * Match ID
   * @return matchId
  **/
  @ApiModelProperty(value = "Match ID")
  public Integer getMatchId() {
    return matchId;
  }

  public void setMatchId(Integer matchId) {
    this.matchId = matchId;
  }

  public InlineResponse200Players playerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
    return this;
  }

   /**
   * Which slot the player is in. 0-127 are Radiant, 128-255 are Dire
   * @return playerSlot
  **/
  @ApiModelProperty(value = "Which slot the player is in. 0-127 are Radiant, 128-255 are Dire")
  public Integer getPlayerSlot() {
    return playerSlot;
  }

  public void setPlayerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
  }

  public InlineResponse200Players abilityUpgradesArr(List<Integer> abilityUpgradesArr) {
    this.abilityUpgradesArr = abilityUpgradesArr;
    return this;
  }

  public InlineResponse200Players addAbilityUpgradesArrItem(Integer abilityUpgradesArrItem) {
    if (this.abilityUpgradesArr == null) {
      this.abilityUpgradesArr = new ArrayList<Integer>();
    }
    this.abilityUpgradesArr.add(abilityUpgradesArrItem);
    return this;
  }

   /**
   * An array describing how abilities were upgraded
   * @return abilityUpgradesArr
  **/
  @ApiModelProperty(value = "An array describing how abilities were upgraded")
  public List<Integer> getAbilityUpgradesArr() {
    return abilityUpgradesArr;
  }

  public void setAbilityUpgradesArr(List<Integer> abilityUpgradesArr) {
    this.abilityUpgradesArr = abilityUpgradesArr;
  }

  public InlineResponse200Players abilityUses(Object abilityUses) {
    this.abilityUses = abilityUses;
    return this;
  }

   /**
   * Object containing information on how many times the played used their abilities
   * @return abilityUses
  **/
  @ApiModelProperty(value = "Object containing information on how many times the played used their abilities")
  public Object getAbilityUses() {
    return abilityUses;
  }

  public void setAbilityUses(Object abilityUses) {
    this.abilityUses = abilityUses;
  }

  public InlineResponse200Players abilityTargets(Object abilityTargets) {
    this.abilityTargets = abilityTargets;
    return this;
  }

   /**
   * Object containing information on who the player used their abilities on
   * @return abilityTargets
  **/
  @ApiModelProperty(value = "Object containing information on who the player used their abilities on")
  public Object getAbilityTargets() {
    return abilityTargets;
  }

  public void setAbilityTargets(Object abilityTargets) {
    this.abilityTargets = abilityTargets;
  }

  public InlineResponse200Players damageTargets(Object damageTargets) {
    this.damageTargets = damageTargets;
    return this;
  }

   /**
   * Object containing information on how and how much damage the player dealt to other heroes
   * @return damageTargets
  **/
  @ApiModelProperty(value = "Object containing information on how and how much damage the player dealt to other heroes")
  public Object getDamageTargets() {
    return damageTargets;
  }

  public void setDamageTargets(Object damageTargets) {
    this.damageTargets = damageTargets;
  }

  public InlineResponse200Players accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * account_id
   * @return accountId
  **/
  @ApiModelProperty(value = "account_id")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public InlineResponse200Players actions(Object actions) {
    this.actions = actions;
    return this;
  }

   /**
   * Object containing information on how many and what type of actions the player issued to their hero
   * @return actions
  **/
  @ApiModelProperty(value = "Object containing information on how many and what type of actions the player issued to their hero")
  public Object getActions() {
    return actions;
  }

  public void setActions(Object actions) {
    this.actions = actions;
  }

  public InlineResponse200Players additionalUnits(Object additionalUnits) {
    this.additionalUnits = additionalUnits;
    return this;
  }

   /**
   * Object containing information on additional units the player had under their control
   * @return additionalUnits
  **/
  @ApiModelProperty(value = "Object containing information on additional units the player had under their control")
  public Object getAdditionalUnits() {
    return additionalUnits;
  }

  public void setAdditionalUnits(Object additionalUnits) {
    this.additionalUnits = additionalUnits;
  }

  public InlineResponse200Players assists(Integer assists) {
    this.assists = assists;
    return this;
  }

   /**
   * Number of assists the player had
   * @return assists
  **/
  @ApiModelProperty(value = "Number of assists the player had")
  public Integer getAssists() {
    return assists;
  }

  public void setAssists(Integer assists) {
    this.assists = assists;
  }

  public InlineResponse200Players backpack0(Integer backpack0) {
    this.backpack0 = backpack0;
    return this;
  }

   /**
   * Item in backpack slot 0
   * @return backpack0
  **/
  @ApiModelProperty(value = "Item in backpack slot 0")
  public Integer getBackpack0() {
    return backpack0;
  }

  public void setBackpack0(Integer backpack0) {
    this.backpack0 = backpack0;
  }

  public InlineResponse200Players backpack1(Integer backpack1) {
    this.backpack1 = backpack1;
    return this;
  }

   /**
   * Item in backpack slot 1
   * @return backpack1
  **/
  @ApiModelProperty(value = "Item in backpack slot 1")
  public Integer getBackpack1() {
    return backpack1;
  }

  public void setBackpack1(Integer backpack1) {
    this.backpack1 = backpack1;
  }

  public InlineResponse200Players backpack2(Integer backpack2) {
    this.backpack2 = backpack2;
    return this;
  }

   /**
   * Item in backpack slot 2
   * @return backpack2
  **/
  @ApiModelProperty(value = "Item in backpack slot 2")
  public Integer getBackpack2() {
    return backpack2;
  }

  public void setBackpack2(Integer backpack2) {
    this.backpack2 = backpack2;
  }

  public InlineResponse200Players buybackLog(List<InlineResponse200BuybackLog> buybackLog) {
    this.buybackLog = buybackLog;
    return this;
  }

  public InlineResponse200Players addBuybackLogItem(InlineResponse200BuybackLog buybackLogItem) {
    if (this.buybackLog == null) {
      this.buybackLog = new ArrayList<InlineResponse200BuybackLog>();
    }
    this.buybackLog.add(buybackLogItem);
    return this;
  }

   /**
   * Array containing information about buybacks
   * @return buybackLog
  **/
  @ApiModelProperty(value = "Array containing information about buybacks")
  public List<InlineResponse200BuybackLog> getBuybackLog() {
    return buybackLog;
  }

  public void setBuybackLog(List<InlineResponse200BuybackLog> buybackLog) {
    this.buybackLog = buybackLog;
  }

  public InlineResponse200Players campsStacked(Integer campsStacked) {
    this.campsStacked = campsStacked;
    return this;
  }

   /**
   * Number of camps stacked
   * @return campsStacked
  **/
  @ApiModelProperty(value = "Number of camps stacked")
  public Integer getCampsStacked() {
    return campsStacked;
  }

  public void setCampsStacked(Integer campsStacked) {
    this.campsStacked = campsStacked;
  }

  public InlineResponse200Players creepsStacked(Integer creepsStacked) {
    this.creepsStacked = creepsStacked;
    return this;
  }

   /**
   * Number of creeps stacked
   * @return creepsStacked
  **/
  @ApiModelProperty(value = "Number of creeps stacked")
  public Integer getCreepsStacked() {
    return creepsStacked;
  }

  public void setCreepsStacked(Integer creepsStacked) {
    this.creepsStacked = creepsStacked;
  }

  public InlineResponse200Players damage(Object damage) {
    this.damage = damage;
    return this;
  }

   /**
   * Object containing information about damage dealt by the player to different units
   * @return damage
  **/
  @ApiModelProperty(value = "Object containing information about damage dealt by the player to different units")
  public Object getDamage() {
    return damage;
  }

  public void setDamage(Object damage) {
    this.damage = damage;
  }

  public InlineResponse200Players damageInflictor(Object damageInflictor) {
    this.damageInflictor = damageInflictor;
    return this;
  }

   /**
   * Object containing information about about the sources of this player&#39;s damage to heroes
   * @return damageInflictor
  **/
  @ApiModelProperty(value = "Object containing information about about the sources of this player's damage to heroes")
  public Object getDamageInflictor() {
    return damageInflictor;
  }

  public void setDamageInflictor(Object damageInflictor) {
    this.damageInflictor = damageInflictor;
  }

  public InlineResponse200Players damageInflictorReceived(Object damageInflictorReceived) {
    this.damageInflictorReceived = damageInflictorReceived;
    return this;
  }

   /**
   * Object containing information about the sources of damage received by this player from heroes
   * @return damageInflictorReceived
  **/
  @ApiModelProperty(value = "Object containing information about the sources of damage received by this player from heroes")
  public Object getDamageInflictorReceived() {
    return damageInflictorReceived;
  }

  public void setDamageInflictorReceived(Object damageInflictorReceived) {
    this.damageInflictorReceived = damageInflictorReceived;
  }

  public InlineResponse200Players damageTaken(Object damageTaken) {
    this.damageTaken = damageTaken;
    return this;
  }

   /**
   * Object containing information about from whom the player took damage
   * @return damageTaken
  **/
  @ApiModelProperty(value = "Object containing information about from whom the player took damage")
  public Object getDamageTaken() {
    return damageTaken;
  }

  public void setDamageTaken(Object damageTaken) {
    this.damageTaken = damageTaken;
  }

  public InlineResponse200Players deaths(Integer deaths) {
    this.deaths = deaths;
    return this;
  }

   /**
   * Number of deaths
   * @return deaths
  **/
  @ApiModelProperty(value = "Number of deaths")
  public Integer getDeaths() {
    return deaths;
  }

  public void setDeaths(Integer deaths) {
    this.deaths = deaths;
  }

  public InlineResponse200Players denies(Integer denies) {
    this.denies = denies;
    return this;
  }

   /**
   * Number of denies
   * @return denies
  **/
  @ApiModelProperty(value = "Number of denies")
  public Integer getDenies() {
    return denies;
  }

  public void setDenies(Integer denies) {
    this.denies = denies;
  }

  public InlineResponse200Players dnT(List<Integer> dnT) {
    this.dnT = dnT;
    return this;
  }

  public InlineResponse200Players addDnTItem(Integer dnTItem) {
    if (this.dnT == null) {
      this.dnT = new ArrayList<Integer>();
    }
    this.dnT.add(dnTItem);
    return this;
  }

   /**
   * Array containing number of denies at different times of the match
   * @return dnT
  **/
  @ApiModelProperty(value = "Array containing number of denies at different times of the match")
  public List<Integer> getDnT() {
    return dnT;
  }

  public void setDnT(List<Integer> dnT) {
    this.dnT = dnT;
  }

  public InlineResponse200Players gold(Integer gold) {
    this.gold = gold;
    return this;
  }

   /**
   * Gold at the end of the game
   * @return gold
  **/
  @ApiModelProperty(value = "Gold at the end of the game")
  public Integer getGold() {
    return gold;
  }

  public void setGold(Integer gold) {
    this.gold = gold;
  }

  public InlineResponse200Players goldPerMin(Integer goldPerMin) {
    this.goldPerMin = goldPerMin;
    return this;
  }

   /**
   * Gold Per Minute obtained by this player
   * @return goldPerMin
  **/
  @ApiModelProperty(value = "Gold Per Minute obtained by this player")
  public Integer getGoldPerMin() {
    return goldPerMin;
  }

  public void setGoldPerMin(Integer goldPerMin) {
    this.goldPerMin = goldPerMin;
  }

  public InlineResponse200Players goldReasons(Object goldReasons) {
    this.goldReasons = goldReasons;
    return this;
  }

   /**
   * Object containing information on how the player gainined gold over the course of the match
   * @return goldReasons
  **/
  @ApiModelProperty(value = "Object containing information on how the player gainined gold over the course of the match")
  public Object getGoldReasons() {
    return goldReasons;
  }

  public void setGoldReasons(Object goldReasons) {
    this.goldReasons = goldReasons;
  }

  public InlineResponse200Players goldSpent(Integer goldSpent) {
    this.goldSpent = goldSpent;
    return this;
  }

   /**
   * How much gold the player spent
   * @return goldSpent
  **/
  @ApiModelProperty(value = "How much gold the player spent")
  public Integer getGoldSpent() {
    return goldSpent;
  }

  public void setGoldSpent(Integer goldSpent) {
    this.goldSpent = goldSpent;
  }

  public InlineResponse200Players goldT(List<Integer> goldT) {
    this.goldT = goldT;
    return this;
  }

  public InlineResponse200Players addGoldTItem(Integer goldTItem) {
    if (this.goldT == null) {
      this.goldT = new ArrayList<Integer>();
    }
    this.goldT.add(goldTItem);
    return this;
  }

   /**
   * Array containing total gold at different times of the match
   * @return goldT
  **/
  @ApiModelProperty(value = "Array containing total gold at different times of the match")
  public List<Integer> getGoldT() {
    return goldT;
  }

  public void setGoldT(List<Integer> goldT) {
    this.goldT = goldT;
  }

  public InlineResponse200Players heroDamage(Integer heroDamage) {
    this.heroDamage = heroDamage;
    return this;
  }

   /**
   * Hero Damage Dealt
   * @return heroDamage
  **/
  @ApiModelProperty(value = "Hero Damage Dealt")
  public Integer getHeroDamage() {
    return heroDamage;
  }

  public void setHeroDamage(Integer heroDamage) {
    this.heroDamage = heroDamage;
  }

  public InlineResponse200Players heroHealing(Integer heroHealing) {
    this.heroHealing = heroHealing;
    return this;
  }

   /**
   * Hero Healing Done
   * @return heroHealing
  **/
  @ApiModelProperty(value = "Hero Healing Done")
  public Integer getHeroHealing() {
    return heroHealing;
  }

  public void setHeroHealing(Integer heroHealing) {
    this.heroHealing = heroHealing;
  }

  public InlineResponse200Players heroHits(Object heroHits) {
    this.heroHits = heroHits;
    return this;
  }

   /**
   * Object containing information on how many ticks of damages the hero inflicted with different spells and damage inflictors
   * @return heroHits
  **/
  @ApiModelProperty(value = "Object containing information on how many ticks of damages the hero inflicted with different spells and damage inflictors")
  public Object getHeroHits() {
    return heroHits;
  }

  public void setHeroHits(Object heroHits) {
    this.heroHits = heroHits;
  }

  public InlineResponse200Players heroId(Integer heroId) {
    this.heroId = heroId;
    return this;
  }

   /**
   * The ID value of the hero played
   * @return heroId
  **/
  @ApiModelProperty(value = "The ID value of the hero played")
  public Integer getHeroId() {
    return heroId;
  }

  public void setHeroId(Integer heroId) {
    this.heroId = heroId;
  }

  public InlineResponse200Players item0(Integer item0) {
    this.item0 = item0;
    return this;
  }

   /**
   * Item in the player&#39;s first slot
   * @return item0
  **/
  @ApiModelProperty(value = "Item in the player's first slot")
  public Integer getItem0() {
    return item0;
  }

  public void setItem0(Integer item0) {
    this.item0 = item0;
  }

  public InlineResponse200Players item1(Integer item1) {
    this.item1 = item1;
    return this;
  }

   /**
   * Item in the player&#39;s second slot
   * @return item1
  **/
  @ApiModelProperty(value = "Item in the player's second slot")
  public Integer getItem1() {
    return item1;
  }

  public void setItem1(Integer item1) {
    this.item1 = item1;
  }

  public InlineResponse200Players item2(Integer item2) {
    this.item2 = item2;
    return this;
  }

   /**
   * Item in the player&#39;s third slot
   * @return item2
  **/
  @ApiModelProperty(value = "Item in the player's third slot")
  public Integer getItem2() {
    return item2;
  }

  public void setItem2(Integer item2) {
    this.item2 = item2;
  }

  public InlineResponse200Players item3(Integer item3) {
    this.item3 = item3;
    return this;
  }

   /**
   * Item in the player&#39;s fourth slot
   * @return item3
  **/
  @ApiModelProperty(value = "Item in the player's fourth slot")
  public Integer getItem3() {
    return item3;
  }

  public void setItem3(Integer item3) {
    this.item3 = item3;
  }

  public InlineResponse200Players item4(Integer item4) {
    this.item4 = item4;
    return this;
  }

   /**
   * Item in the player&#39;s fifth slot
   * @return item4
  **/
  @ApiModelProperty(value = "Item in the player's fifth slot")
  public Integer getItem4() {
    return item4;
  }

  public void setItem4(Integer item4) {
    this.item4 = item4;
  }

  public InlineResponse200Players item5(Integer item5) {
    this.item5 = item5;
    return this;
  }

   /**
   * Item in the player&#39;s sixth slot
   * @return item5
  **/
  @ApiModelProperty(value = "Item in the player's sixth slot")
  public Integer getItem5() {
    return item5;
  }

  public void setItem5(Integer item5) {
    this.item5 = item5;
  }

  public InlineResponse200Players itemUses(Object itemUses) {
    this.itemUses = itemUses;
    return this;
  }

   /**
   * Object containing information about how many times a player used items
   * @return itemUses
  **/
  @ApiModelProperty(value = "Object containing information about how many times a player used items")
  public Object getItemUses() {
    return itemUses;
  }

  public void setItemUses(Object itemUses) {
    this.itemUses = itemUses;
  }

  public InlineResponse200Players killStreaks(Object killStreaks) {
    this.killStreaks = killStreaks;
    return this;
  }

   /**
   * Object containing information about the player&#39;s killstreaks
   * @return killStreaks
  **/
  @ApiModelProperty(value = "Object containing information about the player's killstreaks")
  public Object getKillStreaks() {
    return killStreaks;
  }

  public void setKillStreaks(Object killStreaks) {
    this.killStreaks = killStreaks;
  }

  public InlineResponse200Players killed(Object killed) {
    this.killed = killed;
    return this;
  }

   /**
   * Object containing information about what units the player killed
   * @return killed
  **/
  @ApiModelProperty(value = "Object containing information about what units the player killed")
  public Object getKilled() {
    return killed;
  }

  public void setKilled(Object killed) {
    this.killed = killed;
  }

  public InlineResponse200Players killedBy(Object killedBy) {
    this.killedBy = killedBy;
    return this;
  }

   /**
   * Object containing information about who killed the player
   * @return killedBy
  **/
  @ApiModelProperty(value = "Object containing information about who killed the player")
  public Object getKilledBy() {
    return killedBy;
  }

  public void setKilledBy(Object killedBy) {
    this.killedBy = killedBy;
  }

  public InlineResponse200Players kills(Integer kills) {
    this.kills = kills;
    return this;
  }

   /**
   * Number of kills
   * @return kills
  **/
  @ApiModelProperty(value = "Number of kills")
  public Integer getKills() {
    return kills;
  }

  public void setKills(Integer kills) {
    this.kills = kills;
  }

  public InlineResponse200Players killsLog(List<InlineResponse200KillsLog> killsLog) {
    this.killsLog = killsLog;
    return this;
  }

  public InlineResponse200Players addKillsLogItem(InlineResponse200KillsLog killsLogItem) {
    if (this.killsLog == null) {
      this.killsLog = new ArrayList<InlineResponse200KillsLog>();
    }
    this.killsLog.add(killsLogItem);
    return this;
  }

   /**
   * Array containing information on which hero the player killed at what time
   * @return killsLog
  **/
  @ApiModelProperty(value = "Array containing information on which hero the player killed at what time")
  public List<InlineResponse200KillsLog> getKillsLog() {
    return killsLog;
  }

  public void setKillsLog(List<InlineResponse200KillsLog> killsLog) {
    this.killsLog = killsLog;
  }

  public InlineResponse200Players lanePos(Object lanePos) {
    this.lanePos = lanePos;
    return this;
  }

   /**
   * Object containing information on lane position
   * @return lanePos
  **/
  @ApiModelProperty(value = "Object containing information on lane position")
  public Object getLanePos() {
    return lanePos;
  }

  public void setLanePos(Object lanePos) {
    this.lanePos = lanePos;
  }

  public InlineResponse200Players lastHits(Integer lastHits) {
    this.lastHits = lastHits;
    return this;
  }

   /**
   * Number of last hits
   * @return lastHits
  **/
  @ApiModelProperty(value = "Number of last hits")
  public Integer getLastHits() {
    return lastHits;
  }

  public void setLastHits(Integer lastHits) {
    this.lastHits = lastHits;
  }

  public InlineResponse200Players leaverStatus(Integer leaverStatus) {
    this.leaverStatus = leaverStatus;
    return this;
  }

   /**
   * Integer describing whether or not the player left the game. 0: didn&#39;t leave. 1: left safely. 2+: Abandoned
   * @return leaverStatus
  **/
  @ApiModelProperty(value = "Integer describing whether or not the player left the game. 0: didn't leave. 1: left safely. 2+: Abandoned")
  public Integer getLeaverStatus() {
    return leaverStatus;
  }

  public void setLeaverStatus(Integer leaverStatus) {
    this.leaverStatus = leaverStatus;
  }

  public InlineResponse200Players level(Integer level) {
    this.level = level;
    return this;
  }

   /**
   * Level at the end of the game
   * @return level
  **/
  @ApiModelProperty(value = "Level at the end of the game")
  public Integer getLevel() {
    return level;
  }

  public void setLevel(Integer level) {
    this.level = level;
  }

  public InlineResponse200Players lhT(List<Integer> lhT) {
    this.lhT = lhT;
    return this;
  }

  public InlineResponse200Players addLhTItem(Integer lhTItem) {
    if (this.lhT == null) {
      this.lhT = new ArrayList<Integer>();
    }
    this.lhT.add(lhTItem);
    return this;
  }

   /**
   * Array describing last hits at each minute in the game
   * @return lhT
  **/
  @ApiModelProperty(value = "Array describing last hits at each minute in the game")
  public List<Integer> getLhT() {
    return lhT;
  }

  public void setLhT(List<Integer> lhT) {
    this.lhT = lhT;
  }

  public InlineResponse200Players lifeState(Object lifeState) {
    this.lifeState = lifeState;
    return this;
  }

   /**
   * life_state
   * @return lifeState
  **/
  @ApiModelProperty(value = "life_state")
  public Object getLifeState() {
    return lifeState;
  }

  public void setLifeState(Object lifeState) {
    this.lifeState = lifeState;
  }

  public InlineResponse200Players maxHeroHit(Object maxHeroHit) {
    this.maxHeroHit = maxHeroHit;
    return this;
  }

   /**
   * Object with information on the highest damage instance the player inflicted
   * @return maxHeroHit
  **/
  @ApiModelProperty(value = "Object with information on the highest damage instance the player inflicted")
  public Object getMaxHeroHit() {
    return maxHeroHit;
  }

  public void setMaxHeroHit(Object maxHeroHit) {
    this.maxHeroHit = maxHeroHit;
  }

  public InlineResponse200Players multiKills(Object multiKills) {
    this.multiKills = multiKills;
    return this;
  }

   /**
   * Object with information on the number of the number of multikills the player had
   * @return multiKills
  **/
  @ApiModelProperty(value = "Object with information on the number of the number of multikills the player had")
  public Object getMultiKills() {
    return multiKills;
  }

  public void setMultiKills(Object multiKills) {
    this.multiKills = multiKills;
  }

  public InlineResponse200Players obs(Object obs) {
    this.obs = obs;
    return this;
  }

   /**
   * Object with information on where the player placed observer wards. The location takes the form (outer number, inner number) and are from ~64-192.
   * @return obs
  **/
  @ApiModelProperty(value = "Object with information on where the player placed observer wards. The location takes the form (outer number, inner number) and are from ~64-192.")
  public Object getObs() {
    return obs;
  }

  public void setObs(Object obs) {
    this.obs = obs;
  }

  public InlineResponse200Players obsLeftLog(List<Object> obsLeftLog) {
    this.obsLeftLog = obsLeftLog;
    return this;
  }

  public InlineResponse200Players addObsLeftLogItem(Object obsLeftLogItem) {
    if (this.obsLeftLog == null) {
      this.obsLeftLog = new ArrayList<Object>();
    }
    this.obsLeftLog.add(obsLeftLogItem);
    return this;
  }

   /**
   * obs_left_log
   * @return obsLeftLog
  **/
  @ApiModelProperty(value = "obs_left_log")
  public List<Object> getObsLeftLog() {
    return obsLeftLog;
  }

  public void setObsLeftLog(List<Object> obsLeftLog) {
    this.obsLeftLog = obsLeftLog;
  }

  public InlineResponse200Players obsLog(List<Object> obsLog) {
    this.obsLog = obsLog;
    return this;
  }

  public InlineResponse200Players addObsLogItem(Object obsLogItem) {
    if (this.obsLog == null) {
      this.obsLog = new ArrayList<Object>();
    }
    this.obsLog.add(obsLogItem);
    return this;
  }

   /**
   * Object containing information on when and where the player placed observer wards
   * @return obsLog
  **/
  @ApiModelProperty(value = "Object containing information on when and where the player placed observer wards")
  public List<Object> getObsLog() {
    return obsLog;
  }

  public void setObsLog(List<Object> obsLog) {
    this.obsLog = obsLog;
  }

  public InlineResponse200Players obsPlaced(Integer obsPlaced) {
    this.obsPlaced = obsPlaced;
    return this;
  }

   /**
   * Total number of observer wards placed
   * @return obsPlaced
  **/
  @ApiModelProperty(value = "Total number of observer wards placed")
  public Integer getObsPlaced() {
    return obsPlaced;
  }

  public void setObsPlaced(Integer obsPlaced) {
    this.obsPlaced = obsPlaced;
  }

  public InlineResponse200Players partyId(Integer partyId) {
    this.partyId = partyId;
    return this;
  }

   /**
   * party_id
   * @return partyId
  **/
  @ApiModelProperty(value = "party_id")
  public Integer getPartyId() {
    return partyId;
  }

  public void setPartyId(Integer partyId) {
    this.partyId = partyId;
  }

  public InlineResponse200Players permanentBuffs(List<Object> permanentBuffs) {
    this.permanentBuffs = permanentBuffs;
    return this;
  }

  public InlineResponse200Players addPermanentBuffsItem(Object permanentBuffsItem) {
    if (this.permanentBuffs == null) {
      this.permanentBuffs = new ArrayList<Object>();
    }
    this.permanentBuffs.add(permanentBuffsItem);
    return this;
  }

   /**
   * Array describing permanent buffs the player had at the end of the game. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/permanent_buffs.json
   * @return permanentBuffs
  **/
  @ApiModelProperty(value = "Array describing permanent buffs the player had at the end of the game. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/permanent_buffs.json")
  public List<Object> getPermanentBuffs() {
    return permanentBuffs;
  }

  public void setPermanentBuffs(List<Object> permanentBuffs) {
    this.permanentBuffs = permanentBuffs;
  }

  public InlineResponse200Players pings(Integer pings) {
    this.pings = pings;
    return this;
  }

   /**
   * Total number of pings
   * @return pings
  **/
  @ApiModelProperty(value = "Total number of pings")
  public Integer getPings() {
    return pings;
  }

  public void setPings(Integer pings) {
    this.pings = pings;
  }

  public InlineResponse200Players purchase(Object purchase) {
    this.purchase = purchase;
    return this;
  }

   /**
   * Object containing information on the items the player purchased
   * @return purchase
  **/
  @ApiModelProperty(value = "Object containing information on the items the player purchased")
  public Object getPurchase() {
    return purchase;
  }

  public void setPurchase(Object purchase) {
    this.purchase = purchase;
  }

  public InlineResponse200Players purchaseLog(List<InlineResponse200PurchaseLog> purchaseLog) {
    this.purchaseLog = purchaseLog;
    return this;
  }

  public InlineResponse200Players addPurchaseLogItem(InlineResponse200PurchaseLog purchaseLogItem) {
    if (this.purchaseLog == null) {
      this.purchaseLog = new ArrayList<InlineResponse200PurchaseLog>();
    }
    this.purchaseLog.add(purchaseLogItem);
    return this;
  }

   /**
   * Object containing information on when items were purchased
   * @return purchaseLog
  **/
  @ApiModelProperty(value = "Object containing information on when items were purchased")
  public List<InlineResponse200PurchaseLog> getPurchaseLog() {
    return purchaseLog;
  }

  public void setPurchaseLog(List<InlineResponse200PurchaseLog> purchaseLog) {
    this.purchaseLog = purchaseLog;
  }

  public InlineResponse200Players runePickups(Integer runePickups) {
    this.runePickups = runePickups;
    return this;
  }

   /**
   * Number of runes picked up
   * @return runePickups
  **/
  @ApiModelProperty(value = "Number of runes picked up")
  public Integer getRunePickups() {
    return runePickups;
  }

  public void setRunePickups(Integer runePickups) {
    this.runePickups = runePickups;
  }

  public InlineResponse200Players runes(Map<String, Integer> runes) {
    this.runes = runes;
    return this;
  }

  public InlineResponse200Players putRunesItem(String key, Integer runesItem) {
    if (this.runes == null) {
      this.runes = new HashMap<String, Integer>();
    }
    this.runes.put(key, runesItem);
    return this;
  }

   /**
   * Object with information about which runes the player picked up
   * @return runes
  **/
  @ApiModelProperty(value = "Object with information about which runes the player picked up")
  public Map<String, Integer> getRunes() {
    return runes;
  }

  public void setRunes(Map<String, Integer> runes) {
    this.runes = runes;
  }

  public InlineResponse200Players runesLog(List<InlineResponse200RunesLog> runesLog) {
    this.runesLog = runesLog;
    return this;
  }

  public InlineResponse200Players addRunesLogItem(InlineResponse200RunesLog runesLogItem) {
    if (this.runesLog == null) {
      this.runesLog = new ArrayList<InlineResponse200RunesLog>();
    }
    this.runesLog.add(runesLogItem);
    return this;
  }

   /**
   * Array with information on when runes were picked up
   * @return runesLog
  **/
  @ApiModelProperty(value = "Array with information on when runes were picked up")
  public List<InlineResponse200RunesLog> getRunesLog() {
    return runesLog;
  }

  public void setRunesLog(List<InlineResponse200RunesLog> runesLog) {
    this.runesLog = runesLog;
  }

  public InlineResponse200Players sen(Object sen) {
    this.sen = sen;
    return this;
  }

   /**
   * Object with information on where sentries were placed. The location takes the form (outer number, inner number) and are from ~64-192.
   * @return sen
  **/
  @ApiModelProperty(value = "Object with information on where sentries were placed. The location takes the form (outer number, inner number) and are from ~64-192.")
  public Object getSen() {
    return sen;
  }

  public void setSen(Object sen) {
    this.sen = sen;
  }

  public InlineResponse200Players senLeftLog(List<Object> senLeftLog) {
    this.senLeftLog = senLeftLog;
    return this;
  }

  public InlineResponse200Players addSenLeftLogItem(Object senLeftLogItem) {
    if (this.senLeftLog == null) {
      this.senLeftLog = new ArrayList<Object>();
    }
    this.senLeftLog.add(senLeftLogItem);
    return this;
  }

   /**
   * Array containing information on when and where the player placed sentries
   * @return senLeftLog
  **/
  @ApiModelProperty(value = "Array containing information on when and where the player placed sentries")
  public List<Object> getSenLeftLog() {
    return senLeftLog;
  }

  public void setSenLeftLog(List<Object> senLeftLog) {
    this.senLeftLog = senLeftLog;
  }

  public InlineResponse200Players senLog(List<Object> senLog) {
    this.senLog = senLog;
    return this;
  }

  public InlineResponse200Players addSenLogItem(Object senLogItem) {
    if (this.senLog == null) {
      this.senLog = new ArrayList<Object>();
    }
    this.senLog.add(senLogItem);
    return this;
  }

   /**
   * Array with information on when and where sentries were placed by the player
   * @return senLog
  **/
  @ApiModelProperty(value = "Array with information on when and where sentries were placed by the player")
  public List<Object> getSenLog() {
    return senLog;
  }

  public void setSenLog(List<Object> senLog) {
    this.senLog = senLog;
  }

  public InlineResponse200Players senPlaced(Integer senPlaced) {
    this.senPlaced = senPlaced;
    return this;
  }

   /**
   * How many sentries were placed by the player
   * @return senPlaced
  **/
  @ApiModelProperty(value = "How many sentries were placed by the player")
  public Integer getSenPlaced() {
    return senPlaced;
  }

  public void setSenPlaced(Integer senPlaced) {
    this.senPlaced = senPlaced;
  }

  public InlineResponse200Players stuns(BigDecimal stuns) {
    this.stuns = stuns;
    return this;
  }

   /**
   * Total stun duration of all stuns by the player
   * @return stuns
  **/
  @ApiModelProperty(value = "Total stun duration of all stuns by the player")
  public BigDecimal getStuns() {
    return stuns;
  }

  public void setStuns(BigDecimal stuns) {
    this.stuns = stuns;
  }

  public InlineResponse200Players times(List<Integer> times) {
    this.times = times;
    return this;
  }

  public InlineResponse200Players addTimesItem(Integer timesItem) {
    if (this.times == null) {
      this.times = new ArrayList<Integer>();
    }
    this.times.add(timesItem);
    return this;
  }

   /**
   * Time in seconds corresponding to the time of entries of other arrays in the match.
   * @return times
  **/
  @ApiModelProperty(value = "Time in seconds corresponding to the time of entries of other arrays in the match.")
  public List<Integer> getTimes() {
    return times;
  }

  public void setTimes(List<Integer> times) {
    this.times = times;
  }

  public InlineResponse200Players towerDamage(Integer towerDamage) {
    this.towerDamage = towerDamage;
    return this;
  }

   /**
   * Total tower damage done by the player
   * @return towerDamage
  **/
  @ApiModelProperty(value = "Total tower damage done by the player")
  public Integer getTowerDamage() {
    return towerDamage;
  }

  public void setTowerDamage(Integer towerDamage) {
    this.towerDamage = towerDamage;
  }

  public InlineResponse200Players xpPerMin(Integer xpPerMin) {
    this.xpPerMin = xpPerMin;
    return this;
  }

   /**
   * Experience Per Minute obtained by the player
   * @return xpPerMin
  **/
  @ApiModelProperty(value = "Experience Per Minute obtained by the player")
  public Integer getXpPerMin() {
    return xpPerMin;
  }

  public void setXpPerMin(Integer xpPerMin) {
    this.xpPerMin = xpPerMin;
  }

  public InlineResponse200Players xpReasons(Object xpReasons) {
    this.xpReasons = xpReasons;
    return this;
  }

   /**
   * Object containing information on the sources of this player&#39;s experience
   * @return xpReasons
  **/
  @ApiModelProperty(value = "Object containing information on the sources of this player's experience")
  public Object getXpReasons() {
    return xpReasons;
  }

  public void setXpReasons(Object xpReasons) {
    this.xpReasons = xpReasons;
  }

  public InlineResponse200Players xpT(List<Integer> xpT) {
    this.xpT = xpT;
    return this;
  }

  public InlineResponse200Players addXpTItem(Integer xpTItem) {
    if (this.xpT == null) {
      this.xpT = new ArrayList<Integer>();
    }
    this.xpT.add(xpTItem);
    return this;
  }

   /**
   * Experience at each minute of the game
   * @return xpT
  **/
  @ApiModelProperty(value = "Experience at each minute of the game")
  public List<Integer> getXpT() {
    return xpT;
  }

  public void setXpT(List<Integer> xpT) {
    this.xpT = xpT;
  }

  public InlineResponse200Players personaname(String personaname) {
    this.personaname = personaname;
    return this;
  }

   /**
   * personaname
   * @return personaname
  **/
  @ApiModelProperty(value = "personaname")
  public String getPersonaname() {
    return personaname;
  }

  public void setPersonaname(String personaname) {
    this.personaname = personaname;
  }

  public InlineResponse200Players name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @ApiModelProperty(value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse200Players radiantWin(Boolean radiantWin) {
    this.radiantWin = radiantWin;
    return this;
  }

   /**
   * Boolean indicating whether Radiant won the match
   * @return radiantWin
  **/
  @ApiModelProperty(value = "Boolean indicating whether Radiant won the match")
  public Boolean isRadiantWin() {
    return radiantWin;
  }

  public void setRadiantWin(Boolean radiantWin) {
    this.radiantWin = radiantWin;
  }

  public InlineResponse200Players startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of the match in seconds since 1970
   * @return startTime
  **/
  @ApiModelProperty(value = "Start time of the match in seconds since 1970")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public InlineResponse200Players duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Duration of the game in seconds
   * @return duration
  **/
  @ApiModelProperty(value = "Duration of the game in seconds")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public InlineResponse200Players cluster(Integer cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * cluster
   * @return cluster
  **/
  @ApiModelProperty(value = "cluster")
  public Integer getCluster() {
    return cluster;
  }

  public void setCluster(Integer cluster) {
    this.cluster = cluster;
  }

  public InlineResponse200Players lobbyType(Integer lobbyType) {
    this.lobbyType = lobbyType;
    return this;
  }

   /**
   * Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json
   * @return lobbyType
  **/
  @ApiModelProperty(value = "Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json")
  public Integer getLobbyType() {
    return lobbyType;
  }

  public void setLobbyType(Integer lobbyType) {
    this.lobbyType = lobbyType;
  }

  public InlineResponse200Players gameMode(Integer gameMode) {
    this.gameMode = gameMode;
    return this;
  }

   /**
   * Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json
   * @return gameMode
  **/
  @ApiModelProperty(value = "Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json")
  public Integer getGameMode() {
    return gameMode;
  }

  public void setGameMode(Integer gameMode) {
    this.gameMode = gameMode;
  }

  public InlineResponse200Players patch(Integer patch) {
    this.patch = patch;
    return this;
  }

   /**
   * Integer representing the patch the game was played on
   * @return patch
  **/
  @ApiModelProperty(value = "Integer representing the patch the game was played on")
  public Integer getPatch() {
    return patch;
  }

  public void setPatch(Integer patch) {
    this.patch = patch;
  }

  public InlineResponse200Players region(Integer region) {
    this.region = region;
    return this;
  }

   /**
   * Integer corresponding to the region the game was played on
   * @return region
  **/
  @ApiModelProperty(value = "Integer corresponding to the region the game was played on")
  public Integer getRegion() {
    return region;
  }

  public void setRegion(Integer region) {
    this.region = region;
  }

  public InlineResponse200Players isRadiant(Boolean isRadiant) {
    this.isRadiant = isRadiant;
    return this;
  }

   /**
   * Boolean for whether or not the player is on Radiant
   * @return isRadiant
  **/
  @ApiModelProperty(value = "Boolean for whether or not the player is on Radiant")
  public Boolean isIsRadiant() {
    return isRadiant;
  }

  public void setIsRadiant(Boolean isRadiant) {
    this.isRadiant = isRadiant;
  }

  public InlineResponse200Players win(Integer win) {
    this.win = win;
    return this;
  }

   /**
   * Binary integer representing whether or not the player won
   * @return win
  **/
  @ApiModelProperty(value = "Binary integer representing whether or not the player won")
  public Integer getWin() {
    return win;
  }

  public void setWin(Integer win) {
    this.win = win;
  }

  public InlineResponse200Players lose(Integer lose) {
    this.lose = lose;
    return this;
  }

   /**
   * Binary integer representing whether or not the player lost
   * @return lose
  **/
  @ApiModelProperty(value = "Binary integer representing whether or not the player lost")
  public Integer getLose() {
    return lose;
  }

  public void setLose(Integer lose) {
    this.lose = lose;
  }

  public InlineResponse200Players totalGold(Integer totalGold) {
    this.totalGold = totalGold;
    return this;
  }

   /**
   * Total gold at the end of the game
   * @return totalGold
  **/
  @ApiModelProperty(value = "Total gold at the end of the game")
  public Integer getTotalGold() {
    return totalGold;
  }

  public void setTotalGold(Integer totalGold) {
    this.totalGold = totalGold;
  }

  public InlineResponse200Players totalXp(Integer totalXp) {
    this.totalXp = totalXp;
    return this;
  }

   /**
   * Total experience at the end of the game
   * @return totalXp
  **/
  @ApiModelProperty(value = "Total experience at the end of the game")
  public Integer getTotalXp() {
    return totalXp;
  }

  public void setTotalXp(Integer totalXp) {
    this.totalXp = totalXp;
  }

  public InlineResponse200Players killsPerMin(BigDecimal killsPerMin) {
    this.killsPerMin = killsPerMin;
    return this;
  }

   /**
   * Number of kills per minute
   * @return killsPerMin
  **/
  @ApiModelProperty(value = "Number of kills per minute")
  public BigDecimal getKillsPerMin() {
    return killsPerMin;
  }

  public void setKillsPerMin(BigDecimal killsPerMin) {
    this.killsPerMin = killsPerMin;
  }

  public InlineResponse200Players kda(BigDecimal kda) {
    this.kda = kda;
    return this;
  }

   /**
   * kda
   * @return kda
  **/
  @ApiModelProperty(value = "kda")
  public BigDecimal getKda() {
    return kda;
  }

  public void setKda(BigDecimal kda) {
    this.kda = kda;
  }

  public InlineResponse200Players abandons(Integer abandons) {
    this.abandons = abandons;
    return this;
  }

   /**
   * abandons
   * @return abandons
  **/
  @ApiModelProperty(value = "abandons")
  public Integer getAbandons() {
    return abandons;
  }

  public void setAbandons(Integer abandons) {
    this.abandons = abandons;
  }

  public InlineResponse200Players neutralKills(Integer neutralKills) {
    this.neutralKills = neutralKills;
    return this;
  }

   /**
   * Total number of neutral creeps killed
   * @return neutralKills
  **/
  @ApiModelProperty(value = "Total number of neutral creeps killed")
  public Integer getNeutralKills() {
    return neutralKills;
  }

  public void setNeutralKills(Integer neutralKills) {
    this.neutralKills = neutralKills;
  }

  public InlineResponse200Players towerKills(Integer towerKills) {
    this.towerKills = towerKills;
    return this;
  }

   /**
   * Total number of tower kills the player had
   * @return towerKills
  **/
  @ApiModelProperty(value = "Total number of tower kills the player had")
  public Integer getTowerKills() {
    return towerKills;
  }

  public void setTowerKills(Integer towerKills) {
    this.towerKills = towerKills;
  }

  public InlineResponse200Players courierKills(Integer courierKills) {
    this.courierKills = courierKills;
    return this;
  }

   /**
   * Total number of courier kills the player had
   * @return courierKills
  **/
  @ApiModelProperty(value = "Total number of courier kills the player had")
  public Integer getCourierKills() {
    return courierKills;
  }

  public void setCourierKills(Integer courierKills) {
    this.courierKills = courierKills;
  }

  public InlineResponse200Players laneKills(Integer laneKills) {
    this.laneKills = laneKills;
    return this;
  }

   /**
   * Total number of lane creeps killed by the player
   * @return laneKills
  **/
  @ApiModelProperty(value = "Total number of lane creeps killed by the player")
  public Integer getLaneKills() {
    return laneKills;
  }

  public void setLaneKills(Integer laneKills) {
    this.laneKills = laneKills;
  }

  public InlineResponse200Players heroKills(Integer heroKills) {
    this.heroKills = heroKills;
    return this;
  }

   /**
   * Total number of heroes killed by the player
   * @return heroKills
  **/
  @ApiModelProperty(value = "Total number of heroes killed by the player")
  public Integer getHeroKills() {
    return heroKills;
  }

  public void setHeroKills(Integer heroKills) {
    this.heroKills = heroKills;
  }

  public InlineResponse200Players observerKills(Integer observerKills) {
    this.observerKills = observerKills;
    return this;
  }

   /**
   * Total number of observer wards killed by the player
   * @return observerKills
  **/
  @ApiModelProperty(value = "Total number of observer wards killed by the player")
  public Integer getObserverKills() {
    return observerKills;
  }

  public void setObserverKills(Integer observerKills) {
    this.observerKills = observerKills;
  }

  public InlineResponse200Players sentryKills(Integer sentryKills) {
    this.sentryKills = sentryKills;
    return this;
  }

   /**
   * Total number of sentry wards killed by the player
   * @return sentryKills
  **/
  @ApiModelProperty(value = "Total number of sentry wards killed by the player")
  public Integer getSentryKills() {
    return sentryKills;
  }

  public void setSentryKills(Integer sentryKills) {
    this.sentryKills = sentryKills;
  }

  public InlineResponse200Players roshanKills(Integer roshanKills) {
    this.roshanKills = roshanKills;
    return this;
  }

   /**
   * Total number of roshan kills (last hit on roshan) the player had
   * @return roshanKills
  **/
  @ApiModelProperty(value = "Total number of roshan kills (last hit on roshan) the player had")
  public Integer getRoshanKills() {
    return roshanKills;
  }

  public void setRoshanKills(Integer roshanKills) {
    this.roshanKills = roshanKills;
  }

  public InlineResponse200Players necronomiconKills(Integer necronomiconKills) {
    this.necronomiconKills = necronomiconKills;
    return this;
  }

   /**
   * Total number of Necronomicon creeps killed by the player
   * @return necronomiconKills
  **/
  @ApiModelProperty(value = "Total number of Necronomicon creeps killed by the player")
  public Integer getNecronomiconKills() {
    return necronomiconKills;
  }

  public void setNecronomiconKills(Integer necronomiconKills) {
    this.necronomiconKills = necronomiconKills;
  }

  public InlineResponse200Players ancientKills(Integer ancientKills) {
    this.ancientKills = ancientKills;
    return this;
  }

   /**
   * Total number of Ancient creeps killed by the player
   * @return ancientKills
  **/
  @ApiModelProperty(value = "Total number of Ancient creeps killed by the player")
  public Integer getAncientKills() {
    return ancientKills;
  }

  public void setAncientKills(Integer ancientKills) {
    this.ancientKills = ancientKills;
  }

  public InlineResponse200Players buybackCount(Integer buybackCount) {
    this.buybackCount = buybackCount;
    return this;
  }

   /**
   * Total number of buyback the player used
   * @return buybackCount
  **/
  @ApiModelProperty(value = "Total number of buyback the player used")
  public Integer getBuybackCount() {
    return buybackCount;
  }

  public void setBuybackCount(Integer buybackCount) {
    this.buybackCount = buybackCount;
  }

  public InlineResponse200Players observerUses(Integer observerUses) {
    this.observerUses = observerUses;
    return this;
  }

   /**
   * Number of observer wards used
   * @return observerUses
  **/
  @ApiModelProperty(value = "Number of observer wards used")
  public Integer getObserverUses() {
    return observerUses;
  }

  public void setObserverUses(Integer observerUses) {
    this.observerUses = observerUses;
  }

  public InlineResponse200Players sentryUses(Integer sentryUses) {
    this.sentryUses = sentryUses;
    return this;
  }

   /**
   * Number of sentry wards used
   * @return sentryUses
  **/
  @ApiModelProperty(value = "Number of sentry wards used")
  public Integer getSentryUses() {
    return sentryUses;
  }

  public void setSentryUses(Integer sentryUses) {
    this.sentryUses = sentryUses;
  }

  public InlineResponse200Players laneEfficiency(BigDecimal laneEfficiency) {
    this.laneEfficiency = laneEfficiency;
    return this;
  }

   /**
   * lane_efficiency
   * @return laneEfficiency
  **/
  @ApiModelProperty(value = "lane_efficiency")
  public BigDecimal getLaneEfficiency() {
    return laneEfficiency;
  }

  public void setLaneEfficiency(BigDecimal laneEfficiency) {
    this.laneEfficiency = laneEfficiency;
  }

  public InlineResponse200Players laneEfficiencyPct(BigDecimal laneEfficiencyPct) {
    this.laneEfficiencyPct = laneEfficiencyPct;
    return this;
  }

   /**
   * lane_efficiency_pct
   * @return laneEfficiencyPct
  **/
  @ApiModelProperty(value = "lane_efficiency_pct")
  public BigDecimal getLaneEfficiencyPct() {
    return laneEfficiencyPct;
  }

  public void setLaneEfficiencyPct(BigDecimal laneEfficiencyPct) {
    this.laneEfficiencyPct = laneEfficiencyPct;
  }

  public InlineResponse200Players lane(Integer lane) {
    this.lane = lane;
    return this;
  }

   /**
   * Integer referring to which lane the hero laned in
   * @return lane
  **/
  @ApiModelProperty(value = "Integer referring to which lane the hero laned in")
  public Integer getLane() {
    return lane;
  }

  public void setLane(Integer lane) {
    this.lane = lane;
  }

  public InlineResponse200Players laneRole(Integer laneRole) {
    this.laneRole = laneRole;
    return this;
  }

   /**
   * lane_role
   * @return laneRole
  **/
  @ApiModelProperty(value = "lane_role")
  public Integer getLaneRole() {
    return laneRole;
  }

  public void setLaneRole(Integer laneRole) {
    this.laneRole = laneRole;
  }

  public InlineResponse200Players isRoaming(Boolean isRoaming) {
    this.isRoaming = isRoaming;
    return this;
  }

   /**
   * Boolean referring to whether or not the player roamed
   * @return isRoaming
  **/
  @ApiModelProperty(value = "Boolean referring to whether or not the player roamed")
  public Boolean isIsRoaming() {
    return isRoaming;
  }

  public void setIsRoaming(Boolean isRoaming) {
    this.isRoaming = isRoaming;
  }

  public InlineResponse200Players purchaseTime(Object purchaseTime) {
    this.purchaseTime = purchaseTime;
    return this;
  }

   /**
   * Object with information on when the player last purchased an item
   * @return purchaseTime
  **/
  @ApiModelProperty(value = "Object with information on when the player last purchased an item")
  public Object getPurchaseTime() {
    return purchaseTime;
  }

  public void setPurchaseTime(Object purchaseTime) {
    this.purchaseTime = purchaseTime;
  }

  public InlineResponse200Players firstPurchaseTime(Object firstPurchaseTime) {
    this.firstPurchaseTime = firstPurchaseTime;
    return this;
  }

   /**
   * Object with information on when the player first puchased an item
   * @return firstPurchaseTime
  **/
  @ApiModelProperty(value = "Object with information on when the player first puchased an item")
  public Object getFirstPurchaseTime() {
    return firstPurchaseTime;
  }

  public void setFirstPurchaseTime(Object firstPurchaseTime) {
    this.firstPurchaseTime = firstPurchaseTime;
  }

  public InlineResponse200Players itemWin(Object itemWin) {
    this.itemWin = itemWin;
    return this;
  }

   /**
   * Object with information on whether or not the item won
   * @return itemWin
  **/
  @ApiModelProperty(value = "Object with information on whether or not the item won")
  public Object getItemWin() {
    return itemWin;
  }

  public void setItemWin(Object itemWin) {
    this.itemWin = itemWin;
  }

  public InlineResponse200Players itemUsage(Object itemUsage) {
    this.itemUsage = itemUsage;
    return this;
  }

   /**
   * Object containing binary integers the tell whether the item was purchased by the player (note: this is always 1)
   * @return itemUsage
  **/
  @ApiModelProperty(value = "Object containing binary integers the tell whether the item was purchased by the player (note: this is always 1)")
  public Object getItemUsage() {
    return itemUsage;
  }

  public void setItemUsage(Object itemUsage) {
    this.itemUsage = itemUsage;
  }

  public InlineResponse200Players purchaseTpscroll(Object purchaseTpscroll) {
    this.purchaseTpscroll = purchaseTpscroll;
    return this;
  }

   /**
   * Total number of TP scrolls purchased by the player
   * @return purchaseTpscroll
  **/
  @ApiModelProperty(value = "Total number of TP scrolls purchased by the player")
  public Object getPurchaseTpscroll() {
    return purchaseTpscroll;
  }

  public void setPurchaseTpscroll(Object purchaseTpscroll) {
    this.purchaseTpscroll = purchaseTpscroll;
  }

  public InlineResponse200Players actionsPerMin(Integer actionsPerMin) {
    this.actionsPerMin = actionsPerMin;
    return this;
  }

   /**
   * Actions per minute
   * @return actionsPerMin
  **/
  @ApiModelProperty(value = "Actions per minute")
  public Integer getActionsPerMin() {
    return actionsPerMin;
  }

  public void setActionsPerMin(Integer actionsPerMin) {
    this.actionsPerMin = actionsPerMin;
  }

  public InlineResponse200Players lifeStateDead(Integer lifeStateDead) {
    this.lifeStateDead = lifeStateDead;
    return this;
  }

   /**
   * life_state_dead
   * @return lifeStateDead
  **/
  @ApiModelProperty(value = "life_state_dead")
  public Integer getLifeStateDead() {
    return lifeStateDead;
  }

  public void setLifeStateDead(Integer lifeStateDead) {
    this.lifeStateDead = lifeStateDead;
  }

  public InlineResponse200Players rankTier(Integer rankTier) {
    this.rankTier = rankTier;
    return this;
  }

   /**
   * The rank tier of the player. Tens place indicates rank, ones place indicates stars.
   * @return rankTier
  **/
  @ApiModelProperty(value = "The rank tier of the player. Tens place indicates rank, ones place indicates stars.")
  public Integer getRankTier() {
    return rankTier;
  }

  public void setRankTier(Integer rankTier) {
    this.rankTier = rankTier;
  }

  public InlineResponse200Players cosmetics(List<Integer> cosmetics) {
    this.cosmetics = cosmetics;
    return this;
  }

  public InlineResponse200Players addCosmeticsItem(Integer cosmeticsItem) {
    if (this.cosmetics == null) {
      this.cosmetics = new ArrayList<Integer>();
    }
    this.cosmetics.add(cosmeticsItem);
    return this;
  }

   /**
   * cosmetics
   * @return cosmetics
  **/
  @ApiModelProperty(value = "cosmetics")
  public List<Integer> getCosmetics() {
    return cosmetics;
  }

  public void setCosmetics(List<Integer> cosmetics) {
    this.cosmetics = cosmetics;
  }

  public InlineResponse200Players benchmarks(Object benchmarks) {
    this.benchmarks = benchmarks;
    return this;
  }

   /**
   * Object containing information on certain benchmarks like GPM, XPM, KDA, tower damage, etc
   * @return benchmarks
  **/
  @ApiModelProperty(value = "Object containing information on certain benchmarks like GPM, XPM, KDA, tower damage, etc")
  public Object getBenchmarks() {
    return benchmarks;
  }

  public void setBenchmarks(Object benchmarks) {
    this.benchmarks = benchmarks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200Players inlineResponse200Players = (InlineResponse200Players) o;
    return Objects.equals(this.matchId, inlineResponse200Players.matchId) &&
        Objects.equals(this.playerSlot, inlineResponse200Players.playerSlot) &&
        Objects.equals(this.abilityUpgradesArr, inlineResponse200Players.abilityUpgradesArr) &&
        Objects.equals(this.abilityUses, inlineResponse200Players.abilityUses) &&
        Objects.equals(this.abilityTargets, inlineResponse200Players.abilityTargets) &&
        Objects.equals(this.damageTargets, inlineResponse200Players.damageTargets) &&
        Objects.equals(this.accountId, inlineResponse200Players.accountId) &&
        Objects.equals(this.actions, inlineResponse200Players.actions) &&
        Objects.equals(this.additionalUnits, inlineResponse200Players.additionalUnits) &&
        Objects.equals(this.assists, inlineResponse200Players.assists) &&
        Objects.equals(this.backpack0, inlineResponse200Players.backpack0) &&
        Objects.equals(this.backpack1, inlineResponse200Players.backpack1) &&
        Objects.equals(this.backpack2, inlineResponse200Players.backpack2) &&
        Objects.equals(this.buybackLog, inlineResponse200Players.buybackLog) &&
        Objects.equals(this.campsStacked, inlineResponse200Players.campsStacked) &&
        Objects.equals(this.creepsStacked, inlineResponse200Players.creepsStacked) &&
        Objects.equals(this.damage, inlineResponse200Players.damage) &&
        Objects.equals(this.damageInflictor, inlineResponse200Players.damageInflictor) &&
        Objects.equals(this.damageInflictorReceived, inlineResponse200Players.damageInflictorReceived) &&
        Objects.equals(this.damageTaken, inlineResponse200Players.damageTaken) &&
        Objects.equals(this.deaths, inlineResponse200Players.deaths) &&
        Objects.equals(this.denies, inlineResponse200Players.denies) &&
        Objects.equals(this.dnT, inlineResponse200Players.dnT) &&
        Objects.equals(this.gold, inlineResponse200Players.gold) &&
        Objects.equals(this.goldPerMin, inlineResponse200Players.goldPerMin) &&
        Objects.equals(this.goldReasons, inlineResponse200Players.goldReasons) &&
        Objects.equals(this.goldSpent, inlineResponse200Players.goldSpent) &&
        Objects.equals(this.goldT, inlineResponse200Players.goldT) &&
        Objects.equals(this.heroDamage, inlineResponse200Players.heroDamage) &&
        Objects.equals(this.heroHealing, inlineResponse200Players.heroHealing) &&
        Objects.equals(this.heroHits, inlineResponse200Players.heroHits) &&
        Objects.equals(this.heroId, inlineResponse200Players.heroId) &&
        Objects.equals(this.item0, inlineResponse200Players.item0) &&
        Objects.equals(this.item1, inlineResponse200Players.item1) &&
        Objects.equals(this.item2, inlineResponse200Players.item2) &&
        Objects.equals(this.item3, inlineResponse200Players.item3) &&
        Objects.equals(this.item4, inlineResponse200Players.item4) &&
        Objects.equals(this.item5, inlineResponse200Players.item5) &&
        Objects.equals(this.itemUses, inlineResponse200Players.itemUses) &&
        Objects.equals(this.killStreaks, inlineResponse200Players.killStreaks) &&
        Objects.equals(this.killed, inlineResponse200Players.killed) &&
        Objects.equals(this.killedBy, inlineResponse200Players.killedBy) &&
        Objects.equals(this.kills, inlineResponse200Players.kills) &&
        Objects.equals(this.killsLog, inlineResponse200Players.killsLog) &&
        Objects.equals(this.lanePos, inlineResponse200Players.lanePos) &&
        Objects.equals(this.lastHits, inlineResponse200Players.lastHits) &&
        Objects.equals(this.leaverStatus, inlineResponse200Players.leaverStatus) &&
        Objects.equals(this.level, inlineResponse200Players.level) &&
        Objects.equals(this.lhT, inlineResponse200Players.lhT) &&
        Objects.equals(this.lifeState, inlineResponse200Players.lifeState) &&
        Objects.equals(this.maxHeroHit, inlineResponse200Players.maxHeroHit) &&
        Objects.equals(this.multiKills, inlineResponse200Players.multiKills) &&
        Objects.equals(this.obs, inlineResponse200Players.obs) &&
        Objects.equals(this.obsLeftLog, inlineResponse200Players.obsLeftLog) &&
        Objects.equals(this.obsLog, inlineResponse200Players.obsLog) &&
        Objects.equals(this.obsPlaced, inlineResponse200Players.obsPlaced) &&
        Objects.equals(this.partyId, inlineResponse200Players.partyId) &&
        Objects.equals(this.permanentBuffs, inlineResponse200Players.permanentBuffs) &&
        Objects.equals(this.pings, inlineResponse200Players.pings) &&
        Objects.equals(this.purchase, inlineResponse200Players.purchase) &&
        Objects.equals(this.purchaseLog, inlineResponse200Players.purchaseLog) &&
        Objects.equals(this.runePickups, inlineResponse200Players.runePickups) &&
        Objects.equals(this.runes, inlineResponse200Players.runes) &&
        Objects.equals(this.runesLog, inlineResponse200Players.runesLog) &&
        Objects.equals(this.sen, inlineResponse200Players.sen) &&
        Objects.equals(this.senLeftLog, inlineResponse200Players.senLeftLog) &&
        Objects.equals(this.senLog, inlineResponse200Players.senLog) &&
        Objects.equals(this.senPlaced, inlineResponse200Players.senPlaced) &&
        Objects.equals(this.stuns, inlineResponse200Players.stuns) &&
        Objects.equals(this.times, inlineResponse200Players.times) &&
        Objects.equals(this.towerDamage, inlineResponse200Players.towerDamage) &&
        Objects.equals(this.xpPerMin, inlineResponse200Players.xpPerMin) &&
        Objects.equals(this.xpReasons, inlineResponse200Players.xpReasons) &&
        Objects.equals(this.xpT, inlineResponse200Players.xpT) &&
        Objects.equals(this.personaname, inlineResponse200Players.personaname) &&
        Objects.equals(this.name, inlineResponse200Players.name) &&
        Objects.equals(this.radiantWin, inlineResponse200Players.radiantWin) &&
        Objects.equals(this.startTime, inlineResponse200Players.startTime) &&
        Objects.equals(this.duration, inlineResponse200Players.duration) &&
        Objects.equals(this.cluster, inlineResponse200Players.cluster) &&
        Objects.equals(this.lobbyType, inlineResponse200Players.lobbyType) &&
        Objects.equals(this.gameMode, inlineResponse200Players.gameMode) &&
        Objects.equals(this.patch, inlineResponse200Players.patch) &&
        Objects.equals(this.region, inlineResponse200Players.region) &&
        Objects.equals(this.isRadiant, inlineResponse200Players.isRadiant) &&
        Objects.equals(this.win, inlineResponse200Players.win) &&
        Objects.equals(this.lose, inlineResponse200Players.lose) &&
        Objects.equals(this.totalGold, inlineResponse200Players.totalGold) &&
        Objects.equals(this.totalXp, inlineResponse200Players.totalXp) &&
        Objects.equals(this.killsPerMin, inlineResponse200Players.killsPerMin) &&
        Objects.equals(this.kda, inlineResponse200Players.kda) &&
        Objects.equals(this.abandons, inlineResponse200Players.abandons) &&
        Objects.equals(this.neutralKills, inlineResponse200Players.neutralKills) &&
        Objects.equals(this.towerKills, inlineResponse200Players.towerKills) &&
        Objects.equals(this.courierKills, inlineResponse200Players.courierKills) &&
        Objects.equals(this.laneKills, inlineResponse200Players.laneKills) &&
        Objects.equals(this.heroKills, inlineResponse200Players.heroKills) &&
        Objects.equals(this.observerKills, inlineResponse200Players.observerKills) &&
        Objects.equals(this.sentryKills, inlineResponse200Players.sentryKills) &&
        Objects.equals(this.roshanKills, inlineResponse200Players.roshanKills) &&
        Objects.equals(this.necronomiconKills, inlineResponse200Players.necronomiconKills) &&
        Objects.equals(this.ancientKills, inlineResponse200Players.ancientKills) &&
        Objects.equals(this.buybackCount, inlineResponse200Players.buybackCount) &&
        Objects.equals(this.observerUses, inlineResponse200Players.observerUses) &&
        Objects.equals(this.sentryUses, inlineResponse200Players.sentryUses) &&
        Objects.equals(this.laneEfficiency, inlineResponse200Players.laneEfficiency) &&
        Objects.equals(this.laneEfficiencyPct, inlineResponse200Players.laneEfficiencyPct) &&
        Objects.equals(this.lane, inlineResponse200Players.lane) &&
        Objects.equals(this.laneRole, inlineResponse200Players.laneRole) &&
        Objects.equals(this.isRoaming, inlineResponse200Players.isRoaming) &&
        Objects.equals(this.purchaseTime, inlineResponse200Players.purchaseTime) &&
        Objects.equals(this.firstPurchaseTime, inlineResponse200Players.firstPurchaseTime) &&
        Objects.equals(this.itemWin, inlineResponse200Players.itemWin) &&
        Objects.equals(this.itemUsage, inlineResponse200Players.itemUsage) &&
        Objects.equals(this.purchaseTpscroll, inlineResponse200Players.purchaseTpscroll) &&
        Objects.equals(this.actionsPerMin, inlineResponse200Players.actionsPerMin) &&
        Objects.equals(this.lifeStateDead, inlineResponse200Players.lifeStateDead) &&
        Objects.equals(this.rankTier, inlineResponse200Players.rankTier) &&
        Objects.equals(this.cosmetics, inlineResponse200Players.cosmetics) &&
        Objects.equals(this.benchmarks, inlineResponse200Players.benchmarks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchId, playerSlot, abilityUpgradesArr, abilityUses, abilityTargets, damageTargets, accountId, actions, additionalUnits, assists, backpack0, backpack1, backpack2, buybackLog, campsStacked, creepsStacked, damage, damageInflictor, damageInflictorReceived, damageTaken, deaths, denies, dnT, gold, goldPerMin, goldReasons, goldSpent, goldT, heroDamage, heroHealing, heroHits, heroId, item0, item1, item2, item3, item4, item5, itemUses, killStreaks, killed, killedBy, kills, killsLog, lanePos, lastHits, leaverStatus, level, lhT, lifeState, maxHeroHit, multiKills, obs, obsLeftLog, obsLog, obsPlaced, partyId, permanentBuffs, pings, purchase, purchaseLog, runePickups, runes, runesLog, sen, senLeftLog, senLog, senPlaced, stuns, times, towerDamage, xpPerMin, xpReasons, xpT, personaname, name, radiantWin, startTime, duration, cluster, lobbyType, gameMode, patch, region, isRadiant, win, lose, totalGold, totalXp, killsPerMin, kda, abandons, neutralKills, towerKills, courierKills, laneKills, heroKills, observerKills, sentryKills, roshanKills, necronomiconKills, ancientKills, buybackCount, observerUses, sentryUses, laneEfficiency, laneEfficiencyPct, lane, laneRole, isRoaming, purchaseTime, firstPurchaseTime, itemWin, itemUsage, purchaseTpscroll, actionsPerMin, lifeStateDead, rankTier, cosmetics, benchmarks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200Players {\n");
    
    sb.append("    matchId: ").append(toIndentedString(matchId)).append("\n");
    sb.append("    playerSlot: ").append(toIndentedString(playerSlot)).append("\n");
    sb.append("    abilityUpgradesArr: ").append(toIndentedString(abilityUpgradesArr)).append("\n");
    sb.append("    abilityUses: ").append(toIndentedString(abilityUses)).append("\n");
    sb.append("    abilityTargets: ").append(toIndentedString(abilityTargets)).append("\n");
    sb.append("    damageTargets: ").append(toIndentedString(damageTargets)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    additionalUnits: ").append(toIndentedString(additionalUnits)).append("\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    backpack0: ").append(toIndentedString(backpack0)).append("\n");
    sb.append("    backpack1: ").append(toIndentedString(backpack1)).append("\n");
    sb.append("    backpack2: ").append(toIndentedString(backpack2)).append("\n");
    sb.append("    buybackLog: ").append(toIndentedString(buybackLog)).append("\n");
    sb.append("    campsStacked: ").append(toIndentedString(campsStacked)).append("\n");
    sb.append("    creepsStacked: ").append(toIndentedString(creepsStacked)).append("\n");
    sb.append("    damage: ").append(toIndentedString(damage)).append("\n");
    sb.append("    damageInflictor: ").append(toIndentedString(damageInflictor)).append("\n");
    sb.append("    damageInflictorReceived: ").append(toIndentedString(damageInflictorReceived)).append("\n");
    sb.append("    damageTaken: ").append(toIndentedString(damageTaken)).append("\n");
    sb.append("    deaths: ").append(toIndentedString(deaths)).append("\n");
    sb.append("    denies: ").append(toIndentedString(denies)).append("\n");
    sb.append("    dnT: ").append(toIndentedString(dnT)).append("\n");
    sb.append("    gold: ").append(toIndentedString(gold)).append("\n");
    sb.append("    goldPerMin: ").append(toIndentedString(goldPerMin)).append("\n");
    sb.append("    goldReasons: ").append(toIndentedString(goldReasons)).append("\n");
    sb.append("    goldSpent: ").append(toIndentedString(goldSpent)).append("\n");
    sb.append("    goldT: ").append(toIndentedString(goldT)).append("\n");
    sb.append("    heroDamage: ").append(toIndentedString(heroDamage)).append("\n");
    sb.append("    heroHealing: ").append(toIndentedString(heroHealing)).append("\n");
    sb.append("    heroHits: ").append(toIndentedString(heroHits)).append("\n");
    sb.append("    heroId: ").append(toIndentedString(heroId)).append("\n");
    sb.append("    item0: ").append(toIndentedString(item0)).append("\n");
    sb.append("    item1: ").append(toIndentedString(item1)).append("\n");
    sb.append("    item2: ").append(toIndentedString(item2)).append("\n");
    sb.append("    item3: ").append(toIndentedString(item3)).append("\n");
    sb.append("    item4: ").append(toIndentedString(item4)).append("\n");
    sb.append("    item5: ").append(toIndentedString(item5)).append("\n");
    sb.append("    itemUses: ").append(toIndentedString(itemUses)).append("\n");
    sb.append("    killStreaks: ").append(toIndentedString(killStreaks)).append("\n");
    sb.append("    killed: ").append(toIndentedString(killed)).append("\n");
    sb.append("    killedBy: ").append(toIndentedString(killedBy)).append("\n");
    sb.append("    kills: ").append(toIndentedString(kills)).append("\n");
    sb.append("    killsLog: ").append(toIndentedString(killsLog)).append("\n");
    sb.append("    lanePos: ").append(toIndentedString(lanePos)).append("\n");
    sb.append("    lastHits: ").append(toIndentedString(lastHits)).append("\n");
    sb.append("    leaverStatus: ").append(toIndentedString(leaverStatus)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    lhT: ").append(toIndentedString(lhT)).append("\n");
    sb.append("    lifeState: ").append(toIndentedString(lifeState)).append("\n");
    sb.append("    maxHeroHit: ").append(toIndentedString(maxHeroHit)).append("\n");
    sb.append("    multiKills: ").append(toIndentedString(multiKills)).append("\n");
    sb.append("    obs: ").append(toIndentedString(obs)).append("\n");
    sb.append("    obsLeftLog: ").append(toIndentedString(obsLeftLog)).append("\n");
    sb.append("    obsLog: ").append(toIndentedString(obsLog)).append("\n");
    sb.append("    obsPlaced: ").append(toIndentedString(obsPlaced)).append("\n");
    sb.append("    partyId: ").append(toIndentedString(partyId)).append("\n");
    sb.append("    permanentBuffs: ").append(toIndentedString(permanentBuffs)).append("\n");
    sb.append("    pings: ").append(toIndentedString(pings)).append("\n");
    sb.append("    purchase: ").append(toIndentedString(purchase)).append("\n");
    sb.append("    purchaseLog: ").append(toIndentedString(purchaseLog)).append("\n");
    sb.append("    runePickups: ").append(toIndentedString(runePickups)).append("\n");
    sb.append("    runes: ").append(toIndentedString(runes)).append("\n");
    sb.append("    runesLog: ").append(toIndentedString(runesLog)).append("\n");
    sb.append("    sen: ").append(toIndentedString(sen)).append("\n");
    sb.append("    senLeftLog: ").append(toIndentedString(senLeftLog)).append("\n");
    sb.append("    senLog: ").append(toIndentedString(senLog)).append("\n");
    sb.append("    senPlaced: ").append(toIndentedString(senPlaced)).append("\n");
    sb.append("    stuns: ").append(toIndentedString(stuns)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    towerDamage: ").append(toIndentedString(towerDamage)).append("\n");
    sb.append("    xpPerMin: ").append(toIndentedString(xpPerMin)).append("\n");
    sb.append("    xpReasons: ").append(toIndentedString(xpReasons)).append("\n");
    sb.append("    xpT: ").append(toIndentedString(xpT)).append("\n");
    sb.append("    personaname: ").append(toIndentedString(personaname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    radiantWin: ").append(toIndentedString(radiantWin)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    lobbyType: ").append(toIndentedString(lobbyType)).append("\n");
    sb.append("    gameMode: ").append(toIndentedString(gameMode)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    isRadiant: ").append(toIndentedString(isRadiant)).append("\n");
    sb.append("    win: ").append(toIndentedString(win)).append("\n");
    sb.append("    lose: ").append(toIndentedString(lose)).append("\n");
    sb.append("    totalGold: ").append(toIndentedString(totalGold)).append("\n");
    sb.append("    totalXp: ").append(toIndentedString(totalXp)).append("\n");
    sb.append("    killsPerMin: ").append(toIndentedString(killsPerMin)).append("\n");
    sb.append("    kda: ").append(toIndentedString(kda)).append("\n");
    sb.append("    abandons: ").append(toIndentedString(abandons)).append("\n");
    sb.append("    neutralKills: ").append(toIndentedString(neutralKills)).append("\n");
    sb.append("    towerKills: ").append(toIndentedString(towerKills)).append("\n");
    sb.append("    courierKills: ").append(toIndentedString(courierKills)).append("\n");
    sb.append("    laneKills: ").append(toIndentedString(laneKills)).append("\n");
    sb.append("    heroKills: ").append(toIndentedString(heroKills)).append("\n");
    sb.append("    observerKills: ").append(toIndentedString(observerKills)).append("\n");
    sb.append("    sentryKills: ").append(toIndentedString(sentryKills)).append("\n");
    sb.append("    roshanKills: ").append(toIndentedString(roshanKills)).append("\n");
    sb.append("    necronomiconKills: ").append(toIndentedString(necronomiconKills)).append("\n");
    sb.append("    ancientKills: ").append(toIndentedString(ancientKills)).append("\n");
    sb.append("    buybackCount: ").append(toIndentedString(buybackCount)).append("\n");
    sb.append("    observerUses: ").append(toIndentedString(observerUses)).append("\n");
    sb.append("    sentryUses: ").append(toIndentedString(sentryUses)).append("\n");
    sb.append("    laneEfficiency: ").append(toIndentedString(laneEfficiency)).append("\n");
    sb.append("    laneEfficiencyPct: ").append(toIndentedString(laneEfficiencyPct)).append("\n");
    sb.append("    lane: ").append(toIndentedString(lane)).append("\n");
    sb.append("    laneRole: ").append(toIndentedString(laneRole)).append("\n");
    sb.append("    isRoaming: ").append(toIndentedString(isRoaming)).append("\n");
    sb.append("    purchaseTime: ").append(toIndentedString(purchaseTime)).append("\n");
    sb.append("    firstPurchaseTime: ").append(toIndentedString(firstPurchaseTime)).append("\n");
    sb.append("    itemWin: ").append(toIndentedString(itemWin)).append("\n");
    sb.append("    itemUsage: ").append(toIndentedString(itemUsage)).append("\n");
    sb.append("    purchaseTpscroll: ").append(toIndentedString(purchaseTpscroll)).append("\n");
    sb.append("    actionsPerMin: ").append(toIndentedString(actionsPerMin)).append("\n");
    sb.append("    lifeStateDead: ").append(toIndentedString(lifeStateDead)).append("\n");
    sb.append("    rankTier: ").append(toIndentedString(rankTier)).append("\n");
    sb.append("    cosmetics: ").append(toIndentedString(cosmetics)).append("\n");
    sb.append("    benchmarks: ").append(toIndentedString(benchmarks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

