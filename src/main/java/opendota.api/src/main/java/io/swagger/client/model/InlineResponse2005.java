/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * hero
 */
@ApiModel(description = "hero")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse2005 {
  @SerializedName("hero_id")
  private Integer heroId = null;

  @SerializedName("last_played")
  private Integer lastPlayed = null;

  @SerializedName("games")
  private Integer games = null;

  @SerializedName("win")
  private Integer win = null;

  @SerializedName("with_games")
  private Integer withGames = null;

  @SerializedName("with_win")
  private Integer withWin = null;

  @SerializedName("against_games")
  private Integer againstGames = null;

  @SerializedName("against_win")
  private Integer againstWin = null;

  public InlineResponse2005 heroId(Integer heroId) {
    this.heroId = heroId;
    return this;
  }

   /**
   * The ID value of the hero played
   * @return heroId
  **/
  @ApiModelProperty(value = "The ID value of the hero played")
  public Integer getHeroId() {
    return heroId;
  }

  public void setHeroId(Integer heroId) {
    this.heroId = heroId;
  }

  public InlineResponse2005 lastPlayed(Integer lastPlayed) {
    this.lastPlayed = lastPlayed;
    return this;
  }

   /**
   * last_played
   * @return lastPlayed
  **/
  @ApiModelProperty(value = "last_played")
  public Integer getLastPlayed() {
    return lastPlayed;
  }

  public void setLastPlayed(Integer lastPlayed) {
    this.lastPlayed = lastPlayed;
  }

  public InlineResponse2005 games(Integer games) {
    this.games = games;
    return this;
  }

   /**
   * games
   * @return games
  **/
  @ApiModelProperty(value = "games")
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }

  public InlineResponse2005 win(Integer win) {
    this.win = win;
    return this;
  }

   /**
   * win
   * @return win
  **/
  @ApiModelProperty(value = "win")
  public Integer getWin() {
    return win;
  }

  public void setWin(Integer win) {
    this.win = win;
  }

  public InlineResponse2005 withGames(Integer withGames) {
    this.withGames = withGames;
    return this;
  }

   /**
   * with_games
   * @return withGames
  **/
  @ApiModelProperty(value = "with_games")
  public Integer getWithGames() {
    return withGames;
  }

  public void setWithGames(Integer withGames) {
    this.withGames = withGames;
  }

  public InlineResponse2005 withWin(Integer withWin) {
    this.withWin = withWin;
    return this;
  }

   /**
   * with_win
   * @return withWin
  **/
  @ApiModelProperty(value = "with_win")
  public Integer getWithWin() {
    return withWin;
  }

  public void setWithWin(Integer withWin) {
    this.withWin = withWin;
  }

  public InlineResponse2005 againstGames(Integer againstGames) {
    this.againstGames = againstGames;
    return this;
  }

   /**
   * against_games
   * @return againstGames
  **/
  @ApiModelProperty(value = "against_games")
  public Integer getAgainstGames() {
    return againstGames;
  }

  public void setAgainstGames(Integer againstGames) {
    this.againstGames = againstGames;
  }

  public InlineResponse2005 againstWin(Integer againstWin) {
    this.againstWin = againstWin;
    return this;
  }

   /**
   * against_win
   * @return againstWin
  **/
  @ApiModelProperty(value = "against_win")
  public Integer getAgainstWin() {
    return againstWin;
  }

  public void setAgainstWin(Integer againstWin) {
    this.againstWin = againstWin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005 inlineResponse2005 = (InlineResponse2005) o;
    return Objects.equals(this.heroId, inlineResponse2005.heroId) &&
        Objects.equals(this.lastPlayed, inlineResponse2005.lastPlayed) &&
        Objects.equals(this.games, inlineResponse2005.games) &&
        Objects.equals(this.win, inlineResponse2005.win) &&
        Objects.equals(this.withGames, inlineResponse2005.withGames) &&
        Objects.equals(this.withWin, inlineResponse2005.withWin) &&
        Objects.equals(this.againstGames, inlineResponse2005.againstGames) &&
        Objects.equals(this.againstWin, inlineResponse2005.againstWin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(heroId, lastPlayed, games, win, withGames, withWin, againstGames, againstWin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005 {\n");
    
    sb.append("    heroId: ").append(toIndentedString(heroId)).append("\n");
    sb.append("    lastPlayed: ").append(toIndentedString(lastPlayed)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    win: ").append(toIndentedString(win)).append("\n");
    sb.append("    withGames: ").append(toIndentedString(withGames)).append("\n");
    sb.append("    withWin: ").append(toIndentedString(withWin)).append("\n");
    sb.append("    againstGames: ").append(toIndentedString(againstGames)).append("\n");
    sb.append("    againstWin: ").append(toIndentedString(againstWin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

