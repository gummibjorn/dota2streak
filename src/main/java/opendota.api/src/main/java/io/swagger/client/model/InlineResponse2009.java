/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2009
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse2009 {
  @SerializedName("leaver_status")
  private Object leaverStatus = null;

  @SerializedName("game_mode")
  private Object gameMode = null;

  @SerializedName("lobby_type")
  private Object lobbyType = null;

  @SerializedName("lane_role")
  private Object laneRole = null;

  @SerializedName("region")
  private Object region = null;

  @SerializedName("patch")
  private Object patch = null;

  public InlineResponse2009 leaverStatus(Object leaverStatus) {
    this.leaverStatus = leaverStatus;
    return this;
  }

   /**
   * Integer describing whether or not the player left the game. 0: didn&#39;t leave. 1: left safely. 2+: Abandoned
   * @return leaverStatus
  **/
  @ApiModelProperty(value = "Integer describing whether or not the player left the game. 0: didn't leave. 1: left safely. 2+: Abandoned")
  public Object getLeaverStatus() {
    return leaverStatus;
  }

  public void setLeaverStatus(Object leaverStatus) {
    this.leaverStatus = leaverStatus;
  }

  public InlineResponse2009 gameMode(Object gameMode) {
    this.gameMode = gameMode;
    return this;
  }

   /**
   * Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json
   * @return gameMode
  **/
  @ApiModelProperty(value = "Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json")
  public Object getGameMode() {
    return gameMode;
  }

  public void setGameMode(Object gameMode) {
    this.gameMode = gameMode;
  }

  public InlineResponse2009 lobbyType(Object lobbyType) {
    this.lobbyType = lobbyType;
    return this;
  }

   /**
   * Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json
   * @return lobbyType
  **/
  @ApiModelProperty(value = "Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json")
  public Object getLobbyType() {
    return lobbyType;
  }

  public void setLobbyType(Object lobbyType) {
    this.lobbyType = lobbyType;
  }

  public InlineResponse2009 laneRole(Object laneRole) {
    this.laneRole = laneRole;
    return this;
  }

   /**
   * lane_role
   * @return laneRole
  **/
  @ApiModelProperty(value = "lane_role")
  public Object getLaneRole() {
    return laneRole;
  }

  public void setLaneRole(Object laneRole) {
    this.laneRole = laneRole;
  }

  public InlineResponse2009 region(Object region) {
    this.region = region;
    return this;
  }

   /**
   * Integer corresponding to the region the game was played on
   * @return region
  **/
  @ApiModelProperty(value = "Integer corresponding to the region the game was played on")
  public Object getRegion() {
    return region;
  }

  public void setRegion(Object region) {
    this.region = region;
  }

  public InlineResponse2009 patch(Object patch) {
    this.patch = patch;
    return this;
  }

   /**
   * patch
   * @return patch
  **/
  @ApiModelProperty(value = "patch")
  public Object getPatch() {
    return patch;
  }

  public void setPatch(Object patch) {
    this.patch = patch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2009 inlineResponse2009 = (InlineResponse2009) o;
    return Objects.equals(this.leaverStatus, inlineResponse2009.leaverStatus) &&
        Objects.equals(this.gameMode, inlineResponse2009.gameMode) &&
        Objects.equals(this.lobbyType, inlineResponse2009.lobbyType) &&
        Objects.equals(this.laneRole, inlineResponse2009.laneRole) &&
        Objects.equals(this.region, inlineResponse2009.region) &&
        Objects.equals(this.patch, inlineResponse2009.patch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(leaverStatus, gameMode, lobbyType, laneRole, region, patch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2009 {\n");
    
    sb.append("    leaverStatus: ").append(toIndentedString(leaverStatus)).append("\n");
    sb.append("    gameMode: ").append(toIndentedString(gameMode)).append("\n");
    sb.append("    lobbyType: ").append(toIndentedString(lobbyType)).append("\n");
    sb.append("    laneRole: ").append(toIndentedString(laneRole)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

