/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse200Chat
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse200Chat {
  @SerializedName("time")
  private Integer time = null;

  @SerializedName("unit")
  private String unit = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("slot")
  private Integer slot = null;

  @SerializedName("player_slot")
  private Integer playerSlot = null;

  public InlineResponse200Chat time(Integer time) {
    this.time = time;
    return this;
  }

   /**
   * Time in seconds at which the message was said
   * @return time
  **/
  @ApiModelProperty(value = "Time in seconds at which the message was said")
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }

  public InlineResponse200Chat unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Name of the player who sent the message
   * @return unit
  **/
  @ApiModelProperty(value = "Name of the player who sent the message")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public InlineResponse200Chat key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The message the player sent
   * @return key
  **/
  @ApiModelProperty(value = "The message the player sent")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public InlineResponse200Chat slot(Integer slot) {
    this.slot = slot;
    return this;
  }

   /**
   * slot
   * @return slot
  **/
  @ApiModelProperty(value = "slot")
  public Integer getSlot() {
    return slot;
  }

  public void setSlot(Integer slot) {
    this.slot = slot;
  }

  public InlineResponse200Chat playerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
    return this;
  }

   /**
   * Which slot the player is in. 0-127 are Radiant, 128-255 are Dire
   * @return playerSlot
  **/
  @ApiModelProperty(value = "Which slot the player is in. 0-127 are Radiant, 128-255 are Dire")
  public Integer getPlayerSlot() {
    return playerSlot;
  }

  public void setPlayerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200Chat inlineResponse200Chat = (InlineResponse200Chat) o;
    return Objects.equals(this.time, inlineResponse200Chat.time) &&
        Objects.equals(this.unit, inlineResponse200Chat.unit) &&
        Objects.equals(this.key, inlineResponse200Chat.key) &&
        Objects.equals(this.slot, inlineResponse200Chat.slot) &&
        Objects.equals(this.playerSlot, inlineResponse200Chat.playerSlot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, unit, key, slot, playerSlot);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200Chat {\n");
    
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    slot: ").append(toIndentedString(slot)).append("\n");
    sb.append("    playerSlot: ").append(toIndentedString(playerSlot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

