/*
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * OpenAPI spec version: 17.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * draft_stage
 */
@ApiModel(description = "draft_stage")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-16T13:08:16.611+01:00")
public class InlineResponse200DraftTimings {
  @SerializedName("order")
  private Integer order = null;

  @SerializedName("pick")
  private Boolean pick = null;

  @SerializedName("active_team")
  private Integer activeTeam = null;

  @SerializedName("hero_id")
  private Integer heroId = null;

  @SerializedName("player_slot")
  private Integer playerSlot = null;

  @SerializedName("extra_time")
  private Integer extraTime = null;

  @SerializedName("total_time_taken")
  private Integer totalTimeTaken = null;

  public InlineResponse200DraftTimings order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * order
   * @return order
  **/
  @ApiModelProperty(value = "order")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public InlineResponse200DraftTimings pick(Boolean pick) {
    this.pick = pick;
    return this;
  }

   /**
   * pick
   * @return pick
  **/
  @ApiModelProperty(value = "pick")
  public Boolean isPick() {
    return pick;
  }

  public void setPick(Boolean pick) {
    this.pick = pick;
  }

  public InlineResponse200DraftTimings activeTeam(Integer activeTeam) {
    this.activeTeam = activeTeam;
    return this;
  }

   /**
   * active_team
   * @return activeTeam
  **/
  @ApiModelProperty(value = "active_team")
  public Integer getActiveTeam() {
    return activeTeam;
  }

  public void setActiveTeam(Integer activeTeam) {
    this.activeTeam = activeTeam;
  }

  public InlineResponse200DraftTimings heroId(Integer heroId) {
    this.heroId = heroId;
    return this;
  }

   /**
   * The ID value of the hero played
   * @return heroId
  **/
  @ApiModelProperty(value = "The ID value of the hero played")
  public Integer getHeroId() {
    return heroId;
  }

  public void setHeroId(Integer heroId) {
    this.heroId = heroId;
  }

  public InlineResponse200DraftTimings playerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
    return this;
  }

   /**
   * Which slot the player is in. 0-127 are Radiant, 128-255 are Dire
   * @return playerSlot
  **/
  @ApiModelProperty(value = "Which slot the player is in. 0-127 are Radiant, 128-255 are Dire")
  public Integer getPlayerSlot() {
    return playerSlot;
  }

  public void setPlayerSlot(Integer playerSlot) {
    this.playerSlot = playerSlot;
  }

  public InlineResponse200DraftTimings extraTime(Integer extraTime) {
    this.extraTime = extraTime;
    return this;
  }

   /**
   * extra_time
   * @return extraTime
  **/
  @ApiModelProperty(value = "extra_time")
  public Integer getExtraTime() {
    return extraTime;
  }

  public void setExtraTime(Integer extraTime) {
    this.extraTime = extraTime;
  }

  public InlineResponse200DraftTimings totalTimeTaken(Integer totalTimeTaken) {
    this.totalTimeTaken = totalTimeTaken;
    return this;
  }

   /**
   * total_time_taken
   * @return totalTimeTaken
  **/
  @ApiModelProperty(value = "total_time_taken")
  public Integer getTotalTimeTaken() {
    return totalTimeTaken;
  }

  public void setTotalTimeTaken(Integer totalTimeTaken) {
    this.totalTimeTaken = totalTimeTaken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DraftTimings inlineResponse200DraftTimings = (InlineResponse200DraftTimings) o;
    return Objects.equals(this.order, inlineResponse200DraftTimings.order) &&
        Objects.equals(this.pick, inlineResponse200DraftTimings.pick) &&
        Objects.equals(this.activeTeam, inlineResponse200DraftTimings.activeTeam) &&
        Objects.equals(this.heroId, inlineResponse200DraftTimings.heroId) &&
        Objects.equals(this.playerSlot, inlineResponse200DraftTimings.playerSlot) &&
        Objects.equals(this.extraTime, inlineResponse200DraftTimings.extraTime) &&
        Objects.equals(this.totalTimeTaken, inlineResponse200DraftTimings.totalTimeTaken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, pick, activeTeam, heroId, playerSlot, extraTime, totalTimeTaken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DraftTimings {\n");
    
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    pick: ").append(toIndentedString(pick)).append("\n");
    sb.append("    activeTeam: ").append(toIndentedString(activeTeam)).append("\n");
    sb.append("    heroId: ").append(toIndentedString(heroId)).append("\n");
    sb.append("    playerSlot: ").append(toIndentedString(playerSlot)).append("\n");
    sb.append("    extraTime: ").append(toIndentedString(extraTime)).append("\n");
    sb.append("    totalTimeTaken: ").append(toIndentedString(totalTimeTaken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

